{"version":3,"sources":["../src/zustand/store/eventGuiStore.ts","../src/hooks/useClipboardActions.ts","../src/hooks/useUndoRedo.ts","../src/components/toolbar/index.tsx","../src/components/ui/select/index.tsx","../src/components/sidebar/hooks/useObjectProperties.ts","../src/components/sidebar/hooks/useObjectUpdater.ts","../src/utils/index.ts","../src/components/sidebar/components/commonProperties/index.tsx","../src/components/sidebar/components/circleProperties/index.tsx","../src/components/sidebar/components/rectangleProperties/index.tsx","../src/components/sidebar/components/textProperties/index.tsx","../src/components/sidebar/components/colorProperties/index.tsx","../src/components/sidebar/components/seatAttributes/index.tsx","../src/components/sidebar/index.tsx","../src/components/createObject/index.ts","../src/hooks/useCanvasSetup.ts","../src/hooks/useSelectionHandler.ts","../src/hooks/useMultipleSeatCreator.ts","../src/hooks/useObjectDeletion.ts","../src/hooks/useObjectCreator.ts","../src/hooks/useKeyboardShortcuts.ts","../src/components/index.tsx"],"names":["uuidv4","fabric","useState","useEffect","jsxs","jsx","_a","Select","React","_b","strokeWidthOptions","Fragment","statusOptions","categoryOptions","SeatAttributes","LuPlus","useRef"],"mappings":"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","file":"index.js","sourcesContent":["import { create } from 'zustand'\r\nimport { fabric } from 'fabric'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { CustomRect, CustomCircle, CustomText } from '@/pages/gui/components/createObject';\r\n\r\ninterface Seat {\r\n  id: string\r\n  left: number\r\n  top: number\r\n  radius: number\r\n  fill: string\r\n  stroke: string\r\n  text: string\r\n  textSize: number\r\n  textColor: string\r\n}\r\n\r\ninterface Zone {\r\n  id: string\r\n  name: string\r\n  isChecked: boolean\r\n}\r\n\r\nexport type Mode = 'select' | 'one-seat' | 'multiple-seat' | 'shape-square' | 'text'\r\nexport type Action = null | 'delete' | 'copy' | 'cut' | 'paste'\r\n\r\ninterface EventGuiState {\r\n  // ::::::::::: Loading state\r\n  loading: boolean\r\n\r\n  // ::::::::::: Canvas\r\n  canvas: fabric.Canvas | null\r\n  setCanvas: (canvas: fabric.Canvas) => void\r\n  seats: Seat[]\r\n  addSeat: (seat: Seat) => void\r\n  updateSeat: (id: string, updates: Partial<Seat>) => void\r\n  deleteSeat: (id: string) => void\r\n  selectedSeatIds: string[]\r\n\r\n  // ::::::::::: Mode\r\n  toolMode: Mode\r\n  setToolMode: (mode: Mode) => void\r\n\r\n  // ::::::::::: Action\r\n  toolAction: Action\r\n  setToolAction: (action: Action) => void\r\n\r\n  setSelectedSeatIds: (ids: string[]) => void\r\n  isMultipleSeatMode: boolean\r\n  setIsMultipleSeatMode: (isCreating: boolean) => void\r\n  zones: Zone[]\r\n  addZone: (name: string) => void\r\n  updateZone: (id: string, updates: Partial<Zone>) => void\r\n  deleteZone: (id: string) => void\r\n  zoomLevel: number\r\n  setZoomLevel: (level: number) => void\r\n\r\n  // :::::::::::::::: Clipboard \r\n  clipboard: fabric.Object[] | null\r\n  setClipboard: (objects: fabric.Object[] | null) => void\r\n  lastClickedPoint: { x: number; y: number } | null\r\n  setLastClickedPoint: (point: { x: number; y: number } | null) => void\r\n\r\n  \r\n  // New properties for undo/redo functionality\r\n  undoStack: string[]\r\n  redoStack: string[]\r\n  addToUndoStack: (state: string) => void\r\n  undo: () => void\r\n  redo: () => void\r\n}\r\n\r\nexport const useEventGuiStore = create<EventGuiState>((set, get) => ({\r\n  // ::::::::::::::::::: Loading state\r\n  loading: false,\r\n  \r\n  // ::::::::::::::::::: Canvas state\r\n  canvas: null,\r\n  setCanvas: (canvas) => set({ canvas }),\r\n  \r\n  // ::::::::::::::::::: Seat states\r\n  seats: [],\r\n  // ::::::::::::::::::: Add Seat \r\n  addSeat: (seat) => set((state) => ({ seats: [...state.seats, seat] })),\r\n  // ::::::::::::::::::: Update Seat\r\n  updateSeat: (id, updates) => set((state) => ({\r\n    seats: state.seats.map((seat) => (seat.id === id ? { ...seat, ...updates } : seat))\r\n  })),\r\n  // ::::::::::::::::::: Delete Seat\r\n  deleteSeat: (id) => set((state) => ({\r\n    seats: state.seats.filter((seat) => seat.id !== id)\r\n  })),\r\n\r\n  // ::::::::::::::::::: Selected Seat ID\r\n  selectedSeatIds: [],\r\n  setSelectedSeatIds: (ids) => set({ selectedSeatIds: ids }),\r\n\r\n  // ::::::::::::::::::: Multiple seat creation mode state\r\n  isMultipleSeatMode: false,\r\n  setIsMultipleSeatMode: (isCreating) => set({ isMultipleSeatMode: isCreating }),\r\n  \r\n  // ::::::::::::::::::: Zone states\r\n  zones: [{ id: uuidv4(), name: 'Ground floor', isChecked: true }],\r\n  // ::::::::::::::::::: Add zone\r\n  addZone: (name) => set((state) => ({\r\n    zones: [...state.zones, { id: uuidv4(), name, isChecked: true }]\r\n  })),\r\n  // ::::::::::::::::::: Update zone\r\n  updateZone: (id, updates) => set((state) => ({\r\n    zones: state.zones.map((zone) => (zone.id === id ? { ...zone, ...updates } : zone))\r\n  })),\r\n  // ::::::::::::::::::: Delete zone\r\n  deleteZone: (id) => set((state) => ({\r\n    zones: state.zones.filter((zone) => zone.id !== id)\r\n  })),\r\n  \r\n  // ::::::::::::::::::: Zoom level state\r\n  zoomLevel: 100,\r\n  setZoomLevel: (level) => set({ zoomLevel: level }),\r\n\r\n  // ::::::::::::::::::: Mode state\r\n  toolMode: 'select',\r\n  setToolMode: (mode: Mode) => set({toolMode: mode}),\r\n\r\n  // ::::::::::::::::::: Action state\r\n  toolAction: null,\r\n  setToolAction: (action: Action) => set({toolAction: action}),\r\n\r\n  // ::::::::::::::::::: Clipboard state\r\n  clipboard: null,\r\n  setClipboard: (objects) => set({ clipboard: objects }),\r\n  lastClickedPoint: null,\r\n  setLastClickedPoint: (point) => set({ lastClickedPoint: point }),\r\n\r\n  \r\n  // ::::::::::::::::::::: Undo/redo functionality\r\n  undoStack: [],\r\n  redoStack: [],\r\n  addToUndoStack: (state) => {\r\n    const { loading, undoStack } = get();\r\n    const lastState = undoStack[undoStack.length - 1];\r\n\r\n    if (lastState !== state && !loading) {\r\n      set((prevState) => ({\r\n        undoStack: [...prevState.undoStack, state],\r\n        redoStack: [],\r\n      }));\r\n    }\r\n  },\r\n\r\n  // ::::::::::::::: Function: UNDO\r\n  undo: () => {\r\n    const { canvas, undoStack, redoStack } = get();\r\n\r\n    if (undoStack.length > 1 && canvas) {\r\n      // :::::::::::::::: set loading to true\r\n      set({ loading: true });\r\n\r\n      const currentState = JSON.stringify(canvas.toJSON());\r\n      const previousState = undoStack[undoStack.length - 2];\r\n\r\n      // ::::::::::::: update the canvas\r\n      canvas.loadFromJSON(previousState, () => {\r\n        canvas.getObjects().forEach((obj) => {\r\n          if (obj instanceof fabric.Circle) {\r\n            obj.setControlsVisibility({\r\n              mt: false, mb: false, ml: false, mr: false,\r\n            });\r\n          }\r\n        });\r\n        canvas.renderAll();\r\n        set({\r\n          undoStack: undoStack.slice(0, -1),\r\n          redoStack: [currentState, ...redoStack],\r\n        });\r\n      });\r\n\r\n      // ::::::::::::::::: set loading to false\r\n      set({ loading: false });\r\n      \r\n      // console.log('\\n\\nundo func: ', undoStack);\r\n    }\r\n  },\r\n\r\n  // :::::::::::::: Function: REDO \r\n  redo: () => {\r\n    const { canvas, undoStack, redoStack } = get();\r\n\r\n    if (redoStack.length > 0 && canvas) {\r\n      // :::::::::::::::: set loading to true\r\n      set({ loading: true });\r\n\r\n      const nextState = redoStack[0];\r\n\r\n      // :::::::::::::::: update the canvas\r\n      canvas.loadFromJSON(nextState, () => {\r\n        canvas.getObjects().forEach((obj) => {\r\n          if (obj instanceof fabric.Circle) {\r\n            obj.setControlsVisibility({\r\n              mt: false, mb: false, ml: false, mr: false,\r\n            });\r\n          }\r\n        });\r\n        canvas.renderAll();\r\n        const currentState = JSON.stringify(canvas.toJSON(['id', 'borderColor', 'borderDashArray', 'cornerColor', 'cornerSize', 'cornerStrokeColor', 'transparentCorners', 'rx', 'ry']));\r\n        set({\r\n          undoStack: [...undoStack, currentState],\r\n          redoStack: redoStack.slice(1),\r\n        });\r\n      });\r\n      \r\n      // ::::::::::::::::: set loading to false\r\n      set({ loading: false });\r\n      \r\n      // console.log('\\n\\nredo func: ', undoStack, '\\n\\nredo stack: ', redoStack);\r\n    }\r\n  },\r\n}))\r\n","import { useEventGuiStore } from '@/zustand';\r\nimport { fabric } from 'fabric';\r\n\r\nconst useClipboardActions = () => {\r\n  const { canvas, clipboard, setClipboard, lastClickedPoint, setToolAction } = useEventGuiStore()\r\n\r\n  // :::::::::::::::::::::::::: Function: copy objects\r\n  const copySelectedObjects = () => {\r\n    if (!canvas) return\r\n\r\n    const activeObjects = canvas.getActiveObjects()\r\n    if (activeObjects.length === 0) return\r\n\r\n    // ::::::::::::: Set action to copy\r\n    setToolAction('copy');\r\n\r\n    const clonedObjects = activeObjects.map(obj => fabric.util.object.clone(obj))\r\n    setClipboard(clonedObjects)\r\n  }\r\n\r\n  // :::::::::::::::::::::::::: Function: cut objects\r\n  const cutSelectedObjects = () => {\r\n    if (!canvas) return\r\n\r\n    const activeObjects = canvas.getActiveObjects()\r\n    if (activeObjects.length === 0) return\r\n\r\n    // ::::::::::::: Set action to cut\r\n    setToolAction('cut');\r\n\r\n    const clonedObjects = activeObjects.map(obj => fabric.util.object.clone(obj))\r\n    setClipboard(clonedObjects)\r\n\r\n    canvas.remove(...activeObjects)\r\n    canvas.discardActiveObject()\r\n    canvas.renderAll()\r\n  }\r\n\r\n  // :::::::::::::::::::::::::: Function: paste objects\r\n  const pasteObjects = () => {\r\n    if (!canvas || !clipboard || !lastClickedPoint) return\r\n\r\n    const pastedObjects = clipboard.map(obj => fabric.util.object.clone(obj))\r\n    const boundingBox = getBoundingBox(pastedObjects)\r\n\r\n    // ::::::::::::: Set action to paste\r\n    setToolAction('paste');\r\n\r\n    pastedObjects.forEach(obj => {\r\n      const offsetX = lastClickedPoint.x - boundingBox.left\r\n      const offsetY = lastClickedPoint.y - boundingBox.top\r\n      obj.set({\r\n        left: (obj.left || 0) + offsetX,\r\n        top: (obj.top || 0) + offsetY,\r\n      })\r\n      canvas.add(obj)\r\n    })\r\n\r\n    canvas.renderAll()\r\n  }\r\n\r\n  const getBoundingBox = (objects: fabric.Object[]) => {\r\n    let minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity\r\n\r\n    objects.forEach(obj => {\r\n      const objBoundingRect = obj.getBoundingRect()\r\n      minX = Math.min(minX, objBoundingRect.left)\r\n      minY = Math.min(minY, objBoundingRect.top)\r\n      maxX = Math.max(maxX, objBoundingRect.left + objBoundingRect.width)\r\n      maxY = Math.max(maxY, objBoundingRect.top + objBoundingRect.height)\r\n    })\r\n\r\n    return { left: minX, top: minY, width: maxX - minX, height: maxY - minY }\r\n  }\r\n\r\n  return { copySelectedObjects, cutSelectedObjects, pasteObjects }\r\n}\r\n\r\nexport default useClipboardActions","import { useEffect, useCallback } from 'react';\r\nimport { useEventGuiStore } from '@/zustand';\r\n\r\nconst useUndoRedo = () => {\r\n  const { canvas, addToUndoStack, undo, redo, undoStack } = useEventGuiStore();\r\n\r\n  // :::::::::::::::: Function: appends undo state\r\n  const handleObjectModified = useCallback(() => {\r\n    if (canvas) {\r\n      const jsonState = JSON.stringify(canvas.toJSON(['id', 'borderColor', 'borderDashArray', 'cornerColor', 'cornerSize', 'cornerStrokeColor', 'transparentCorners', 'rx', 'ry']));\r\n      addToUndoStack(jsonState);\r\n    }\r\n  }, [canvas, addToUndoStack]);\r\n\r\n  useEffect(() => {\r\n    if (!canvas) return\r\n\r\n    const eventsToListen = [\r\n      'object:modified',\r\n      'object:added',\r\n      'object:removed'\r\n    ];\r\n\r\n    // ::::::::::::::: Loop through events to call function\r\n    eventsToListen.forEach(event => {\r\n      canvas.on(event, handleObjectModified);\r\n    });\r\n\r\n    return () => {\r\n      eventsToListen.forEach(event => {\r\n        canvas.off(event, handleObjectModified);\r\n      });\r\n    }\r\n  }, [canvas, addToUndoStack])\r\n\r\n  return { undo, redo }\r\n}\r\n\r\nexport default useUndoRedo;","import React, { useState } from 'react';\r\nimport { useEventGuiStore } from '@/zustand';\r\nimport useClipboardActions from '@/hooks/useClipboardActions';\r\nimport useUndoRedo from '@/hooks/useUndoRedo';\r\nimport {\r\n  LuFile,\r\n  LuFolderOpen,\r\n  LuSave,\r\n  LuMousePointer,\r\n  LuClipboardCheck,\r\n  LuLayoutDashboard,\r\n  LuPlus,\r\n  LuGrid2X2,\r\n  LuUndo,\r\n  LuRedo,\r\n  LuScissors,\r\n  LuCopy,\r\n  LuTrash2,\r\n  LuZoomIn,\r\n  LuZoomOut,\r\n  LuQrCode,\r\n} from 'react-icons/lu';\r\nimport { RiText, RiShapeLine, RiApps2AddLine } from 'react-icons/ri';\r\n\r\nconst Toolbar: React.FC = () => {\r\n  const {\r\n    zoomLevel,\r\n    setZoomLevel,\r\n    toolMode,\r\n    setToolMode,\r\n    toolAction,\r\n    setToolAction,\r\n  } = useEventGuiStore();\r\n\r\n  const { copySelectedObjects, cutSelectedObjects, pasteObjects } =\r\n    useClipboardActions();\r\n  const { undo, redo } = useUndoRedo();\r\n\r\n  // ::::::::::::::::::: Function: toggle create multiple seats mode\r\n  const toggleMultipleSeatMode = () => {\r\n    setToolMode(toolMode === 'multiple-seat' ? 'select' : 'multiple-seat');\r\n  };\r\n\r\n  // ::::::::::::::::::: Buttons data\r\n  const buttonGroups = [\r\n    { icon: LuFile, tooltip: 'New File', onClick: () => {}, state: false },\r\n    {\r\n      icon: LuFolderOpen,\r\n      tooltip: 'Open File',\r\n      onClick: () => {},\r\n      state: false,\r\n    },\r\n    { icon: LuSave, tooltip: 'Save File', onClick: () => {}, state: false },\r\n    {\r\n      icon: LuMousePointer,\r\n      tooltip: 'Select',\r\n      onClick: () => {\r\n        setToolMode('select');\r\n      },\r\n      state: toolMode === 'select',\r\n    },\r\n    { icon: LuGrid2X2, tooltip: 'Grid View', onClick: () => {}, state: false },\r\n    {\r\n      icon: LuLayoutDashboard,\r\n      tooltip: 'Layout View',\r\n      onClick: () => {},\r\n      state: false,\r\n    },\r\n    {\r\n      icon: RiText,\r\n      tooltip: 'Add Text',\r\n      onClick: () => {\r\n        setToolMode('text');\r\n      },\r\n      state: toolMode === 'text',\r\n    },\r\n    {\r\n      icon: RiShapeLine,\r\n      tooltip: 'Add Square',\r\n      onClick: () => {\r\n        setToolMode('shape-square');\r\n      },\r\n      state: toolMode === 'shape-square',\r\n    },\r\n    {\r\n      icon: LuPlus,\r\n      tooltip: 'Add Seat',\r\n      onClick: () => {\r\n        setToolMode('one-seat');\r\n      },\r\n      state: toolMode === 'one-seat',\r\n    },\r\n    {\r\n      icon: RiApps2AddLine,\r\n      tooltip: 'Add Rows',\r\n      onClick: toggleMultipleSeatMode,\r\n      state: toolMode === 'multiple-seat',\r\n    },\r\n    { icon: LuUndo, tooltip: 'Undo', onClick: undo, state: false },\r\n    { icon: LuRedo, tooltip: 'Redo', onClick: redo, state: false },\r\n    {\r\n      icon: LuScissors,\r\n      tooltip: 'Cut',\r\n      onClick: cutSelectedObjects,\r\n      state: toolAction === 'cut',\r\n    },\r\n    {\r\n      icon: LuCopy,\r\n      tooltip: 'Copy',\r\n      onClick: copySelectedObjects,\r\n      state: toolAction === 'copy',\r\n    },\r\n    {\r\n      icon: LuClipboardCheck,\r\n      tooltip: 'Paste',\r\n      onClick: pasteObjects,\r\n      state: toolAction === 'paste',\r\n    },\r\n    {\r\n      icon: LuTrash2,\r\n      tooltip: 'Delete',\r\n      onClick: () => {\r\n        setToolAction('delete');\r\n      },\r\n      state: false, // toolAction === 'delete'\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"sticky top-0 left-0 z-[200] flex items-center gap-1 w-full bg-white px-[1rem] py-[0.5rem] shadow\">\r\n      {buttonGroups.map((item, index) => (\r\n        <React.Fragment key={index}>\r\n          {/* :::::::::::::: add seperator */}\r\n          {[6, 10, 12].includes(index) && (\r\n            <Separator key={`seperator-${index}`} />\r\n          )}\r\n\r\n          {/* :::::::::::::: add space */}\r\n          {3 === index && <div className=\"flex-1\" key={`space-${index}`} />}\r\n\r\n          {/* ::::::::::::::: buttons */}\r\n          <Button\r\n            key={`button-${index}`}\r\n            icon={<item.icon className=\"h-4 w-4\" />}\r\n            tooltip={item.tooltip}\r\n            onClick={item.onClick}\r\n            state={item.state}\r\n          />\r\n        </React.Fragment>\r\n      ))}\r\n\r\n      {/* :::::::::::::: add seperator */}\r\n      <Separator />\r\n\r\n      {/* :::::::::::::: zoom button */}\r\n      <Button\r\n        icon={<LuZoomOut className=\"h-4 w-4\" />}\r\n        tooltip=\"Zoom Out\"\r\n        onClick={() => setZoomLevel(zoomLevel - 10)}\r\n      />\r\n      <div className=\"flex items-center justify-center w-12 h-8 text-sm font-medium\">\r\n        {zoomLevel}%\r\n      </div>\r\n      <Button\r\n        icon={<LuZoomIn className=\"h-4 w-4\" />}\r\n        tooltip=\"Zoom In\"\r\n        onClick={() => setZoomLevel(zoomLevel + 10)}\r\n      />\r\n\r\n      {/* ::::::::::::::: add space */}\r\n      <div className=\"flex-1\" />\r\n\r\n      {/* ::::::::::::::: qr code button */}\r\n      <Button icon={<LuQrCode className=\"h-4 w-4\" />} tooltip=\"QR Code\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n\r\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n  icon: React.ReactNode;\r\n  tooltip: string;\r\n  state?: boolean;\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({ icon, tooltip, state, ...props }) => {\r\n  const [showTooltip, setShowTooltip] = useState(false);\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      <button\r\n        className={`p-2 rounded-md hover:bg-gray-200/60 ${\r\n          state ? 'ring-1 ring-gray-400 shadow-sm shadow-gray-400' : ''\r\n        } active:bg-gray-200 ease-250 `}\r\n        onMouseEnter={() => setShowTooltip(true)}\r\n        onMouseLeave={() => setShowTooltip(false)}\r\n        {...props}\r\n      >\r\n        {icon}\r\n      </button>\r\n\r\n      <div\r\n        className={`absolute left-1/2 transform -translate-x-1/2 ${\r\n          showTooltip\r\n            ? 'top-[calc(100%+0.5rem)] opacity-100'\r\n            : 'top-[100%] opacity-0'\r\n        } px-2 py-1 bg-gray-200 text-gray-900 text-[0.625rem] rounded whitespace-nowrap shadow-md ease-250`}\r\n      >\r\n        {tooltip}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Separator: React.FC = () => (\r\n  <div className=\"w-px h-6 bg-gray-300 mx-[1rem] \" />\r\n);\r\n","import React, { useState, useRef, useEffect } from 'react';\r\n\r\ninterface SelectOption {\r\n  value: string;\r\n  label: string;\r\n}\r\n\r\ninterface SelectProps {\r\n  options: SelectOption[];\r\n  value: string;\r\n  onChange: (value: string) => void;\r\n  placeholder?: string;\r\n}\r\n\r\nconst Select: React.FC<SelectProps> = ({ options, value, onChange, placeholder = 'Select an option' }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const selectRef = useRef<HTMLDivElement>(null);\r\n  const [dropdownPosition, setDropdownPosition] = useState<'top' | 'bottom'>('bottom');\r\n\r\n  const handleToggle = () => setIsOpen(!isOpen);\r\n\r\n  const handleOptionClick = (optionValue: string) => {\r\n    onChange(optionValue);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const handleClickOutside = (event: MouseEvent) => {\r\n    if (selectRef.current && !selectRef.current.contains(event.target as Node)) {\r\n      setIsOpen(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  const selectedOption = options.find(option => option.value === value);\r\n\r\n  // :::::::::::::::::::: Set dropdown position based on bottom space\r\n  const calculateDropdownPosition = () => {\r\n    if (selectRef.current) {\r\n      const { bottom } = selectRef.current.getBoundingClientRect();\r\n      const windowHeight = window.innerHeight;\r\n\r\n      // :::::::::::::::::::::: Check if there is enough space below\r\n      if (windowHeight - bottom < 120) {\r\n        setDropdownPosition('top');\r\n      } else {\r\n        setDropdownPosition('bottom');\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      calculateDropdownPosition();\r\n    }\r\n  }, [isOpen]);\r\n\r\n  return (\r\n    <div ref={selectRef} className=\"relative\">\r\n      <div\r\n        className=\"flex items-center justify-between w-full px-3 py-2 text-sm bg-white border border-gray-300 rounded-md shadow-sm cursor-pointer focus:outline-none focus:ring-2 focus:ring-gray-500 focus:border-gray-500\"\r\n        onClick={handleToggle}\r\n      >\r\n        <span className=\"block truncate\">\r\n          {selectedOption ? selectedOption.label : placeholder}\r\n        </span>\r\n        <span className=\"pointer-events-none\">\r\n          <svg className=\"w-5 h-5 text-gray-400\" viewBox=\"0 0 20 20\" fill=\"none\" stroke=\"currentColor\">\r\n            <path d=\"M7 7l3-3 3 3m0 6l-3 3-3-3\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n          </svg>\r\n        </span>\r\n      </div>\r\n      {/* {isOpen && ( */}\r\n      <div className={`absolute z-10 w-full mt-1 bg-white border-solid border border-gray-300 shadow-lg rounded-[8px] overflow-hidden ${dropdownPosition === 'top' ? 'bottom-full mb-1' : 'top-full mt-1'} ${isOpen? 'opacity-100 user-select-auto visible' : 'select-none user-select-none invisible opacity-0'} ease-250` }>\r\n        <ul className=\"overflow-auto text-base max-h-60 focus:outline-none sm:text-sm\">\r\n          {options.map((option) => (\r\n            <li\r\n              key={option.value}\r\n              className={`cursor-pointer select-none relative py-2 pl-3 pr-9 ${\r\n                value === option.value ? 'bg-gray-100 text-gray-600' : 'text-gray-900 hover:bg-gray-50'\r\n              }`}\r\n              onClick={() => handleOptionClick(option.value)}\r\n            >\r\n              <span className=\"block truncate\">{option.label}</span>\r\n              {value === option.value && (\r\n                <span className=\"absolute inset-y-0 right-0 flex items-center pr-4 text-gray-600\">\r\n                  <svg className=\"w-5 h-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                    <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                </span>\r\n              )}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      {/* )} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import { useState, useEffect } from 'react';\r\nimport { fabric } from 'fabric';\r\nimport { Pattern, Gradient } from 'fabric/fabric-impl';\r\nimport { CustomFabricObject } from '@/types/fabric-types';\r\n\r\nexport interface Properties {\r\n  angle: number;\r\n  radius: number;\r\n  width: number;\r\n  height: number;\r\n  fill: string | Pattern | Gradient | undefined;\r\n  stroke: string | Pattern | Gradient | undefined;\r\n  text: string;\r\n  fontSize: number;\r\n  fontWeight: string;\r\n  fontFamily: string;\r\n  left: number;\r\n  top: number;\r\n  rx?: number;\r\n  ry?: number;\r\n  seatNumber?: string;\r\n  category?: string;\r\n  price?: number;\r\n  status?: 'available' | 'reserved' | 'sold';\r\n}\r\n\r\nexport const useObjectProperties = (\r\n  canvas: fabric.Canvas | null,\r\n  selectedObject: CustomFabricObject | null\r\n) => {\r\n\r\n  // ::::::::::::::::::: Properties state\r\n  const [properties, setProperties] = useState<Properties>({\r\n    angle: 0,\r\n    radius: 10,\r\n    width: 100,\r\n    height: 100,\r\n    fill: 'transparent' as string | undefined,\r\n    stroke: '#000000' as string | undefined,\r\n    text: '',\r\n    fontSize: 20,\r\n    fontWeight: 'normal',\r\n    fontFamily: 'sans-serif',\r\n    left: 0,\r\n    top: 0\r\n  });\r\n\r\n  // ::::::::::::::::::::::: Listen for object selection\r\n  useEffect(() => {\r\n    if (!selectedObject) return;\r\n\r\n    setProperties({\r\n      angle: selectedObject.angle || 0,\r\n      radius: ((selectedObject as any).radius * (selectedObject as any).scaleX) || 10,\r\n      width: (selectedObject.width ?? 100) * (selectedObject.scaleX ?? 1),\r\n      height: (selectedObject.height ?? 100) * (selectedObject.scaleY ?? 1),\r\n\r\n      // ::::::::::: fill\r\n      fill: selectedObject.fill ? String(selectedObject.fill).toUpperCase() === 'BLACK' ? '#000000' : String(selectedObject.fill) : 'transparent',\r\n\r\n      // ::::::::::: stroke\r\n      stroke: selectedObject.stroke ? (Number(selectedObject.stroke) === 1 ? '#000000' : String(selectedObject.stroke)) : '#000000',\r\n\r\n      text: (selectedObject as any).text || '',\r\n      fontSize: (selectedObject as any).fontSize || 20,\r\n      fontWeight: (selectedObject as any).fontWeight || 'normal',\r\n      fontFamily: (selectedObject as any).fontFamily || 'sans-serif',\r\n      left: selectedObject.left || 0,\r\n      top: selectedObject.top || 0,\r\n      rx: (selectedObject as any).rx ?? 0,\r\n      ry: (selectedObject as any).ry ?? 0,\r\n      seatNumber: (selectedObject as any).seatNumber || '',\r\n      category: (selectedObject as any).category || '',\r\n      price: (selectedObject as any).price || undefined,\r\n      status: (selectedObject as any).status || 'available',\r\n    });\r\n  }, [selectedObject]);\r\n\r\n  return { properties, setProperties };\r\n};","// import { fabric } from 'fabric';\r\n// import { CustomFabricObject } from '@/types/fabric-types';\r\n// import { Properties } from './useObjectProperties';\r\n\r\n// export const useObjectUpdater = (\r\n//   canvas: fabric.Canvas | null, \r\n//   setProperties: React.Dispatch<React.SetStateAction<Properties>>\r\n// ) => {\r\n//   const updateObject = (updates: Partial<Properties>) => {\r\n//     if (!canvas) return;\r\n\r\n//     const activeObjects = canvas.getActiveObjects();\r\n//     if (activeObjects.length === 0) return;\r\n\r\n//     // Only update the properties that have changed\r\n//     const updatedProperties: Partial<CustomFabricObject> = {};\r\n//     for (const [key, value] of Object.entries(updates)) {\r\n//       if (activeObjects[0][key as keyof CustomFabricObject] !== value) {\r\n//         updatedProperties[key as keyof CustomFabricObject] = value;\r\n//       }\r\n//     }\r\n\r\n//     // Ensure stroke is always a string when it's being updated\r\n//     if ('stroke' in updatedProperties && updatedProperties.stroke !== undefined) {\r\n//       updatedProperties.stroke = String(updatedProperties.stroke);\r\n//     }\r\n\r\n//     activeObjects.forEach((obj) => {\r\n//       obj.set(updatedProperties);\r\n\r\n//       if (obj.type === 'i-text') {\r\n//         obj.set({\r\n//           scaleX: 1,\r\n//           scaleY: 1,\r\n//         });\r\n//       }\r\n//     });\r\n\r\n//     canvas.renderAll();\r\n\r\n//     // Update properties based on the first selected object\r\n//     setProperties(prev => ({\r\n//       ...prev,\r\n//       ...updatedProperties\r\n//     }));\r\n//   };\r\n\r\n//   return { updateObject };\r\n// };\r\n\r\nimport { fabric } from 'fabric';\r\nimport { CustomFabricObject } from '@/types/fabric-types';\r\nimport { Properties } from './useObjectProperties';\r\n\r\nexport const useObjectUpdater = (\r\n  canvas: fabric.Canvas | null,\r\n  setProperties: React.Dispatch<React.SetStateAction<Properties>>\r\n) => {\r\n  const updateObject = (updates: Partial<Properties>) => {\r\n    if (!canvas) return;\r\n\r\n    const activeObjects = canvas.getActiveObjects() as CustomFabricObject[];\r\n    if (activeObjects.length === 0) return;\r\n\r\n    activeObjects.forEach((selectedObject) => {\r\n      const updatedProperties: Partial<CustomFabricObject> = {};\r\n      for (const [key, value] of Object.entries(updates)) {\r\n        if (selectedObject[key as keyof CustomFabricObject] !== value) {\r\n          updatedProperties[key as keyof CustomFabricObject] = value;\r\n        }\r\n      }\r\n\r\n      // Ensure stroke is always a string when it's being updated\r\n      if ('stroke' in updatedProperties && updatedProperties.stroke !== undefined) {\r\n        updatedProperties.stroke = String(updatedProperties.stroke);\r\n      }\r\n\r\n      // Special handling for width/height: set and reset scaleX/scaleY\r\n      if ('width' in updates && updates.width !== undefined) {\r\n        selectedObject.set({ width: updates.width, scaleX: 1 });\r\n        delete updatedProperties.width;\r\n      }\r\n      if ('height' in updates && updates.height !== undefined) {\r\n        selectedObject.set({ height: updates.height, scaleY: 1 });\r\n        delete updatedProperties.height;\r\n      }\r\n\r\n      selectedObject.set(updatedProperties);\r\n\r\n      // :::::::::::: Ensures the text's scales remains 1, only font-size should change\r\n      if (selectedObject.type === 'i-text') {\r\n        selectedObject.set({\r\n          scaleX: 1,\r\n          scaleY: 1,\r\n        });\r\n      }\r\n\r\n      // --- Improved auto-snap to canvas edge after rotation ---\r\n      if (Object.prototype.hasOwnProperty.call(updates, 'angle')) {\r\n        selectedObject.setCoords(); // recalculate coords after rotation\r\n        const rect = selectedObject.getBoundingRect();\r\n        const canvasWidth = canvas.getWidth();\r\n        const canvasHeight = canvas.getHeight();\r\n        let dx = 0, dy = 0;\r\n        // Snap left/right\r\n        if (rect.left < 0) {\r\n          dx = -rect.left;\r\n        } else if (rect.left + rect.width > canvasWidth) {\r\n          dx = canvasWidth - (rect.left + rect.width);\r\n        }\r\n        // Snap top/bottom\r\n        if (rect.top < 0) {\r\n          dy = -rect.top;\r\n        } else if (rect.top + rect.height > canvasHeight) {\r\n          dy = canvasHeight - (rect.top + rect.height);\r\n        }\r\n        if (dx !== 0 || dy !== 0) {\r\n          // Move by offset, using current origin\r\n          const originX = selectedObject.originX || 'center';\r\n          const originY = selectedObject.originY || 'center';\r\n          // Calculate new center position\r\n          const newCenter = {\r\n            x: (selectedObject.left ?? 0) + dx,\r\n            y: (selectedObject.top ?? 0) + dy,\r\n          };\r\n          selectedObject.setPositionByOrigin(newCenter, originX, originY);\r\n          selectedObject.setCoords();\r\n        }\r\n      }\r\n\r\n      canvas.renderAll();\r\n\r\n      setProperties(prev => ({\r\n        ...prev,\r\n        ...updatedProperties\r\n      }));\r\n    });\r\n  };\r\n\r\n  return { updateObject };\r\n};","import { Pattern, Gradient } from 'fabric/fabric-impl';\r\n\r\n// :::::::::::::::::::: Converts number to float conditionally\r\nexport const toFloat = (num: number) => {\r\n  return num % 1 !== 0 ? Number(num.toFixed(2)) : num;\r\n};\r\n\r\n// ::::::::::::::::::: Object Properties type\r\nexport interface PropertiesType {\r\n  angle?: number;\r\n  radius?: number;\r\n  width?: number;\r\n  height?: number;\r\n  fill?: string | Pattern | Gradient | undefined;\r\n  stroke?: string | Pattern | Gradient | undefined;\r\n  text?: string;\r\n  fontSize?: number;\r\n  fontWeight?: string;\r\n  fontFamily?: string;\r\n  left?: number;\r\n  top?: number;\r\n}","import { toFloat } from '@/utils';\r\n\r\ninterface Properties {\r\n  angle: number;\r\n  left: number;\r\n  top: number;\r\n  width?: number;\r\n  height?: number;\r\n}\r\n\r\ninterface CommonPropertiesProps {\r\n  properties: Properties;\r\n  updateObject: (updates: Partial<Properties>) => void;\r\n}\r\n\r\nconst angleOptions = [\r\n  { value: 45, label: '45°' },\r\n  { value: 90, label: '90°' },\r\n  { value: 180, label: '180°' },\r\n  { value: 270, label: '270°' },\r\n];\r\n\r\nconst CommonProperties: React.FC<CommonPropertiesProps> = ({\r\n  properties,\r\n  updateObject,\r\n}) => (\r\n  <div className=\"space-y-2\">\r\n    <div className=\"grid grid-cols-2 gap-2\">\r\n      <div>\r\n        <label className=\"block text-xs font-medium text-gray-600 mb-1\">\r\n          Position X\r\n        </label>\r\n        <div className=\"flex items-center gap-1\">\r\n          <button\r\n            className=\"w-6 h-6 flex items-center justify-center hover:bg-gray-100 rounded text-xs transition-colors border border-gray-200 border-solid\"\r\n            onClick={() => updateObject({ left: toFloat(properties.left) - 1 })}\r\n          >\r\n            -\r\n          </button>\r\n          <input\r\n            type=\"number\"\r\n            value={toFloat(properties.left)}\r\n            onChange={(e) => updateObject({ left: Number(e.target.value) })}\r\n            className=\"border-solid w-16 px-1 py-0.5 text-center border border-gray-200 rounded text-xs focus:outline-none focus:ring-1 focus:ring-gray-500 bg-white [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none\"\r\n          />\r\n          <button\r\n            className=\"w-6 h-6 flex items-center justify-center hover:bg-gray-100 rounded text-xs transition-colors border border-gray-200 border-solid\"\r\n            onClick={() => updateObject({ left: toFloat(properties.left) + 1 })}\r\n          >\r\n            +\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <label className=\"block text-xs font-medium text-gray-600 mb-1\">\r\n          Position Y\r\n        </label>\r\n        <div className=\"flex items-center gap-1\">\r\n          <button\r\n            className=\"w-6 h-6 flex items-center justify-center hover:bg-gray-100 rounded text-xs transition-colors border border-gray-200 border-solid\"\r\n            onClick={() => updateObject({ top: toFloat(properties.top) - 1 })}\r\n          >\r\n            -\r\n          </button>\r\n          <input\r\n            type=\"number\"\r\n            value={toFloat(properties.top)}\r\n            onChange={(e) => updateObject({ top: Number(e.target.value) })}\r\n            className=\"border-solid w-16 px-1 py-0.5 text-center border border-gray-200 rounded text-xs focus:outline-none focus:ring-1 focus:ring-gray-500 bg-white [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none\"\r\n          />\r\n          <button\r\n            className=\"w-6 h-6 flex items-center justify-center hover:bg-gray-100 rounded text-xs transition-colors border border-gray-200 border-solid\"\r\n            onClick={() => updateObject({ top: toFloat(properties.top) + 1 })}\r\n          >\r\n            +\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <label className=\"block text-xs font-medium text-gray-600 mb-1\">\r\n          Width\r\n        </label>\r\n        <div className=\"flex items-center gap-1\">\r\n          <button\r\n            className=\"w-6 h-6 flex items-center justify-center hover:bg-gray-100 rounded text-xs transition-colors border border-gray-200 border-solid\"\r\n            onClick={() =>\r\n              updateObject({ width: toFloat(properties.width ?? 0) - 1 })\r\n            }\r\n          >\r\n            -\r\n          </button>\r\n          <input\r\n            type=\"number\"\r\n            value={toFloat(properties.width ?? 0)}\r\n            onChange={(e) => updateObject({ width: Number(e.target.value) })}\r\n            className=\"border-solid w-16 px-1 py-0.5 text-center border border-gray-200 rounded text-xs focus:outline-none focus:ring-1 focus:ring-gray-500 bg-white [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none\"\r\n          />\r\n          <button\r\n            className=\"w-6 h-6 flex items-center justify-center hover:bg-gray-100 rounded text-xs transition-colors border border-gray-200 border-solid\"\r\n            onClick={() =>\r\n              updateObject({ width: toFloat(properties.width ?? 0) + 1 })\r\n            }\r\n          >\r\n            +\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <label className=\"block text-xs font-medium text-gray-600 mb-1\">\r\n          Height\r\n        </label>\r\n        <div className=\"flex items-center gap-1\">\r\n          <button\r\n            className=\"w-6 h-6 flex items-center justify-center hover:bg-gray-100 rounded text-xs transition-colors border border-gray-200 border-solid\"\r\n            onClick={() =>\r\n              updateObject({ height: toFloat(properties.height ?? 0) - 1 })\r\n            }\r\n          >\r\n            -\r\n          </button>\r\n          <input\r\n            type=\"number\"\r\n            value={toFloat(properties.height ?? 0)}\r\n            onChange={(e) => updateObject({ height: Number(e.target.value) })}\r\n            className=\"border-solid w-16 px-1 py-0.5 text-center border border-gray-200 rounded text-xs focus:outline-none focus:ring-1 focus:ring-gray-500 bg-white [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none\"\r\n          />\r\n          <button\r\n            className=\"w-6 h-6 flex items-center justify-center hover:bg-gray-100 rounded text-xs transition-colors border border-gray-200 border-solid\"\r\n            onClick={() =>\r\n              updateObject({ height: toFloat(properties.height ?? 0) + 1 })\r\n            }\r\n          >\r\n            +\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <label className=\"block text-xs font-medium text-gray-600 mb-1\">\r\n        Angle\r\n      </label>\r\n      <div className=\"flex items-center gap-1\">\r\n        <button\r\n          className=\"w-6 h-6 flex items-center justify-center hover:bg-gray-100 rounded text-xs transition-colors border border-gray-200 border-solid\"\r\n          onClick={() => updateObject({ angle: toFloat(properties.angle) - 1 })}\r\n        >\r\n          -\r\n        </button>\r\n        <input\r\n          type=\"number\"\r\n          value={toFloat(properties.angle)}\r\n          onChange={(e) => updateObject({ angle: Number(e.target.value) })}\r\n          className=\"border-solid w-16 px-1 py-0.5 text-center border border-gray-200 rounded text-xs focus:outline-none focus:ring-1 focus:ring-gray-500 bg-white [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none\"\r\n        />\r\n        <button\r\n          className=\"w-6 h-6 flex items-center justify-center hover:bg-gray-100 rounded text-xs transition-colors border border-gray-200 border-solid\"\r\n          onClick={() => updateObject({ angle: toFloat(properties.angle) + 1 })}\r\n        >\r\n          +\r\n        </button>\r\n        <div className=\"flex items-center gap-1 ml-1\">\r\n          {angleOptions.map(({ value, label }) => (\r\n            <button\r\n              key={value}\r\n              className=\"w-6 h-6 flex items-center justify-center hover:bg-gray-100 rounded text-xs transition-colors border border-gray-200 border-solid\"\r\n              onClick={() => updateObject({ angle: value })}\r\n              title={label}\r\n            >\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"12\"\r\n                height=\"12\"\r\n                viewBox=\"0 0 24 24\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                style={{ transform: `rotate(${value+90}deg)` }}\r\n              >\r\n                <path d=\"M12 2v20M2 12h20\" />\r\n                <path d=\"M2 12l4-4M2 12l4 4\" />\r\n              </svg>\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default CommonProperties;\r\n","import { toFloat, PropertiesType } from '@/utils';\r\n// import { toFloat } from '../utils';\r\nimport React from 'react';\r\n\r\ninterface Properties {\r\n  radius: number;\r\n  seatNumber?: string;\r\n  category?: string;\r\n  price?: number;\r\n  status?: 'available' | 'reserved' | 'sold';\r\n}\r\n\r\ninterface CirclePropertiesProps {\r\n  properties: Properties;\r\n  updateObject: (updates: Partial<Properties>) => void;\r\n  Select: React.FC<{\r\n    options: { value: string; label: string }[];\r\n    value: string;\r\n    onChange: (value: string) => void;\r\n  }>;\r\n}\r\n\r\nconst statusOptions = [\r\n  { value: 'available', label: 'Available' },\r\n  { value: 'reserved', label: 'Reserved' },\r\n  { value: 'sold', label: 'Sold' },\r\n];\r\n\r\nconst categoryOptions = [\r\n  { value: 'standard', label: 'Standard' },\r\n  { value: 'vip', label: 'VIP' },\r\n  { value: 'premium', label: 'Premium' },\r\n];\r\n\r\nconst SeatAttributes: React.FC<CirclePropertiesProps> = ({\r\n  properties,\r\n  updateObject,\r\n  Select,\r\n}) => (\r\n  <div className=\"space-y-4\">\r\n    <div>\r\n      <label className=\"block text-sm font-medium text-gray-700\">\r\n        Seat Number\r\n      </label>\r\n      <input\r\n        type=\"text\"\r\n        value={properties.seatNumber || ''}\r\n        onChange={(e) => updateObject({ seatNumber: e.target.value })}\r\n        className=\"mt-1 px-2 py-1 w-full border rounded-md\"\r\n      />\r\n    </div>\r\n    <div>\r\n      <label className=\"block text-sm font-medium text-gray-700\">\r\n        Category\r\n      </label>\r\n      <Select\r\n        options={categoryOptions}\r\n        value={properties.category || 'standard'}\r\n        onChange={(value) => updateObject({ category: value })}\r\n      />\r\n    </div>\r\n    <div>\r\n      <label className=\"block text-sm font-medium text-gray-700\">Price</label>\r\n      <input\r\n        type=\"number\"\r\n        value={properties.price || 0}\r\n        onChange={(e) => updateObject({ price: Number(e.target.value) })}\r\n        className=\"mt-1 px-2 py-1 w-full border rounded-md\"\r\n      />\r\n    </div>\r\n    <div>\r\n      <label className=\"block text-sm font-medium text-gray-700\">Status</label>\r\n      <Select\r\n        options={statusOptions}\r\n        value={properties.status || 'available'}\r\n        onChange={(value) =>\r\n          updateObject({ status: value as Properties['status'] })\r\n        }\r\n      />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst CircleProperties: React.FC<CirclePropertiesProps> = ({\r\n  properties,\r\n  updateObject,\r\n  Select,\r\n}) => {\r\n  const [activeTab, setActiveTab] = React.useState<'basic' | 'attributes'>(\r\n    'basic'\r\n  );\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <div className=\"flex items-center gap-2 border-b border-gray-200\">\r\n        <button\r\n          className={`px-3 py-1.5 text-sm font-medium ${\r\n            activeTab === 'basic'\r\n              ? 'border-b-2 border-blue-500 text-blue-600'\r\n              : 'text-gray-500 hover:text-gray-700'\r\n          }`}\r\n          onClick={() => setActiveTab('basic')}\r\n        >\r\n          Properties\r\n        </button>\r\n        <button\r\n          className={`px-3 py-1.5 text-sm font-medium ${\r\n            activeTab === 'attributes'\r\n              ? 'border-b-2 border-blue-500 text-blue-600'\r\n              : 'text-gray-500 hover:text-gray-700'\r\n          }`}\r\n          onClick={() => setActiveTab('attributes')}\r\n        >\r\n          Attributes\r\n        </button>\r\n      </div>\r\n\r\n      {activeTab === 'basic' ? (\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700\">\r\n            Radius\r\n          </label>\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center gap-1\">\r\n              <button\r\n                className=\"w-6 h-6 flex items-center justify-center hover:bg-gray-100 rounded border border-gray-200 border-solid text-xs transition-colors\"\r\n                onClick={() =>\r\n                  updateObject({ radius: toFloat(properties.radius) - 1 })\r\n                }\r\n              >\r\n                -\r\n              </button>\r\n              <input\r\n                type=\"number\"\r\n                value={toFloat(properties.radius)}\r\n                onChange={(e) =>\r\n                  updateObject({ radius: Number(e.target.value) })\r\n                }\r\n                className=\"w-12 px-1 py-0.5 text-center border border-gray-200 border-solid rounded text-xs focus:outline-none focus:ring-1 focus:ring-gray-500 bg-white [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none\"\r\n              />\r\n              <button\r\n                className=\"w-6 h-6 flex items-center justify-center hover:bg-gray-100 rounded border border-gray-200 border-solid text-xs transition-colors\"\r\n                onClick={() =>\r\n                  updateObject({ radius: toFloat(properties.radius) + 1 })\r\n                }\r\n              >\r\n                +\r\n              </button>\r\n            </div>\r\n            <div className=\"flex items-center gap-1 mb-1\">\r\n              <button\r\n                className={`w-6 h-6 flex items-center justify-center rounded border border-gray-200 border-solid ${\r\n                  properties.radius === 0 ? 'bg-gray-200' : 'bg-white'\r\n                } transition-colors`}\r\n                onClick={() => updateObject({ radius: 0 })}\r\n                title=\"None\"\r\n              >\r\n                <svg\r\n                  width=\"14\"\r\n                  height=\"14\"\r\n                  viewBox=\"0 0 14 14\"\r\n                  fill=\"none\"\r\n                  stroke=\"currentColor\"\r\n                  strokeWidth=\"2\"\r\n                >\r\n                  <rect x=\"2\" y=\"2\" width=\"10\" height=\"10\" rx=\"0\" />\r\n                </svg>\r\n              </button>\r\n              <button\r\n                className={`w-6 h-6 flex items-center justify-center rounded border border-gray-200 border-solid ${\r\n                  properties.radius === 4 ? 'bg-gray-200' : 'bg-white'\r\n                } transition-colors text-xs`}\r\n                onClick={() => updateObject({ radius: 4 })}\r\n                title=\"Small\"\r\n              >\r\n                sm\r\n              </button>\r\n              <button\r\n                className={`w-6 h-6 flex items-center justify-center rounded border border-gray-200 border-solid ${\r\n                  properties.radius === 10 ? 'bg-gray-200' : 'bg-white'\r\n                } transition-colors text-xs`}\r\n                onClick={() => updateObject({ radius: 10 })}\r\n                title=\"Medium\"\r\n              >\r\n                md\r\n              </button>\r\n              <button\r\n                className={`w-6 h-6 flex items-center justify-center rounded border border-gray-200 border-solid ${\r\n                  properties.radius === 20 ? 'bg-gray-200' : 'bg-white'\r\n                } transition-colors text-xs`}\r\n                onClick={() => updateObject({ radius: 20 })}\r\n                title=\"Large\"\r\n              >\r\n                lg\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <SeatAttributes\r\n          properties={properties}\r\n          updateObject={updateObject}\r\n          Select={Select}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CircleProperties;\r\n","import { toFloat, PropertiesType } from '@/utils';\r\n// import { toFloat } from '../utils';\r\nimport { Pattern, Gradient } from 'fabric/fabric-impl';\r\nimport { useState, useEffect } from 'react';\r\nimport { useEventGuiStore } from '@/zustand';\r\n\r\ninterface Properties {\r\n  width: number;\r\n  height: number;\r\n  fill?: string | Pattern | Gradient;\r\n  stroke?: string | Pattern | Gradient;\r\n  strokeWidth?: number;\r\n  rx?: number;\r\n  ry?: number;\r\n}\r\n\r\ninterface RectanglePropertiesProps {\r\n  properties: Properties;\r\n  updateObject: (updates: Partial<Properties>) => void;\r\n  Select: React.FC<{\r\n    options: { value: string; label: string }[];\r\n    value: string;\r\n    onChange: (value: string) => void;\r\n  }>;\r\n}\r\n\r\nconst strokeWidthOptions = [\r\n  { value: 0, label: 'None' },\r\n  { value: 1, label: 'Thin' },\r\n  { value: 2, label: 'Medium' },\r\n  { value: 3, label: 'Thick' },\r\n  { value: 4, label: 'Extra Thick' },\r\n];\r\n\r\nconst RectangleProperties: React.FC<RectanglePropertiesProps> = ({\r\n  properties,\r\n  updateObject,\r\n  Select,\r\n}) => {\r\n  const [lockAspect, setLockAspect] = useState(true);\r\n  const { canvas } = useEventGuiStore();\r\n\r\n  useEffect(() => {\r\n    if (!canvas) return;\r\n    const activeObject = canvas.getActiveObject && canvas.getActiveObject();\r\n    if (activeObject && activeObject.type === 'rect') {\r\n      activeObject.set('lockUniScaling', lockAspect);\r\n      activeObject.setControlsVisibility({\r\n        mt: !lockAspect,\r\n        mb: !lockAspect,\r\n        ml: !lockAspect,\r\n        mr: !lockAspect,\r\n      });\r\n      canvas.renderAll && canvas.renderAll();\r\n    }\r\n  }, [lockAspect, canvas]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex items-center mt-2\">\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={lockAspect}\r\n          onChange={(e) => setLockAspect(e.target.checked)}\r\n          className=\"mr-2\"\r\n        />\r\n        <span className=\"text-xs text-gray-600\">Lock aspect ratio</span>\r\n      </div>\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700\">\r\n          Stroke Width\r\n        </label>\r\n        <Select\r\n          options={strokeWidthOptions}\r\n          value={properties.strokeWidth?.toString() || '1'}\r\n          onChange={(value) => updateObject({ strokeWidth: Number(value) })}\r\n        />\r\n      </div>\r\n      <div className=\"mt-2\">\r\n        <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n          Border Radius\r\n        </label>\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center gap-1\">\r\n            <button\r\n              className=\"w-6 h-6 flex items-center justify-center hover:bg-gray-100 rounded border border-gray-200 border-solid text-xs transition-colors\"\r\n              onClick={() =>\r\n                updateObject({\r\n                  rx: toFloat((properties as any).rx ?? 0) - 1,\r\n                  ry: toFloat((properties as any).ry ?? 0) - 1,\r\n                })\r\n              }\r\n            >\r\n              -\r\n            </button>\r\n            <input\r\n              type=\"number\"\r\n              value={toFloat((properties as any).rx ?? 0)}\r\n              onChange={(e) =>\r\n                updateObject({\r\n                  rx: Number(e.target.value),\r\n                  ry: Number(e.target.value),\r\n                })\r\n              }\r\n              className=\"w-12 px-1 py-0.5 text-center border border-gray-200 border-solid rounded text-xs focus:outline-none focus:ring-1 focus:ring-gray-500 bg-white [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none\"\r\n            />\r\n            <button\r\n              className=\"w-6 h-6 flex items-center justify-center hover:bg-gray-100 rounded border border-gray-200 border-solid text-xs transition-colors\"\r\n              onClick={() =>\r\n                updateObject({\r\n                  rx: toFloat((properties as any).rx ?? 0) + 1,\r\n                  ry: toFloat((properties as any).ry ?? 0) + 1,\r\n                })\r\n              }\r\n            >\r\n              +\r\n            </button>\r\n          </div>\r\n          <div className=\"flex items-center gap-1 mb-1\">\r\n            <button\r\n              className={`w-6 h-6 flex items-center justify-center rounded border border-gray-200 border-solid ${\r\n                ((properties as any).rx ?? 0) === 0 ? 'bg-gray-200' : 'bg-white'\r\n              } transition-colors`}\r\n              onClick={() => updateObject({ rx: 0, ry: 0 })}\r\n              title=\"None\"\r\n            >\r\n              <svg\r\n                width=\"14\"\r\n                height=\"14\"\r\n                viewBox=\"0 0 14 14\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                strokeWidth=\"2\"\r\n              >\r\n                <rect x=\"2\" y=\"2\" width=\"10\" height=\"10\" rx=\"0\" />\r\n              </svg>\r\n            </button>\r\n            <button\r\n              className={`w-6 h-6 flex items-center justify-center rounded border border-gray-200 border-solid ${\r\n                ((properties as any).rx ?? 0) === 4 ? 'bg-gray-200' : 'bg-white'\r\n              } transition-colors text-xs`}\r\n              onClick={() => updateObject({ rx: 4, ry: 4 })}\r\n              title=\"Small\"\r\n            >\r\n              sm\r\n            </button>\r\n            <button\r\n              className={`w-6 h-6 flex items-center justify-center rounded border border-gray-200 border-solid ${\r\n                ((properties as any).rx ?? 0) === 10\r\n                  ? 'bg-gray-200'\r\n                  : 'bg-white'\r\n              } transition-colors text-xs`}\r\n              onClick={() => updateObject({ rx: 10, ry: 10 })}\r\n              title=\"Medium\"\r\n            >\r\n              md\r\n            </button>\r\n            <button\r\n              className={`w-6 h-6 flex items-center justify-center rounded border border-gray-200 border-solid ${\r\n                ((properties as any).rx ?? 0) === 20\r\n                  ? 'bg-gray-200'\r\n                  : 'bg-white'\r\n              } transition-colors text-xs`}\r\n              onClick={() => updateObject({ rx: 20, ry: 20 })}\r\n              title=\"Large\"\r\n            >\r\n              lg\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RectangleProperties;\r\n","import { toFloat, PropertiesType } from '@/utils';\r\n// import { toFloat } from '../utils';\r\n\r\ninterface Properties {\r\n  text: string;\r\n  fontSize: number;\r\n  fontWeight: string;\r\n  fontFamily: string;\r\n  strokeWidth?: number;\r\n}\r\n\r\ninterface TextPropertiesProps {\r\n  properties: Properties;\r\n  updateObject: (updates: Partial<Properties>) => void;\r\n  Select: React.ComponentType<{\r\n    options: Array<{ value: string; label: string }>;\r\n    value: string;\r\n    onChange: (value: string) => void;\r\n  }>;\r\n}\r\n\r\nconst fontWeightOptions = [\r\n  { value: '100', label: 'Thin' },\r\n  { value: '200', label: 'Extra Light' },\r\n  { value: '300', label: 'Light' },\r\n  { value: '400', label: 'Regular' },\r\n  { value: '500', label: 'Medium' },\r\n  { value: '600', label: 'Semi Bold' },\r\n  { value: '700', label: 'Bold' },\r\n  { value: '800', label: 'Extra Bold' },\r\n  { value: '900', label: 'Black' },\r\n];\r\n\r\nconst fontFamilyOptions = [\r\n  { value: 'sans-serif', label: 'Sans-serif' },\r\n  { value: 'serif', label: 'Serif' },\r\n  { value: 'monospace', label: 'Monospace' },\r\n  { value: 'poppins', label: 'Poppins' },\r\n];\r\n\r\nconst strokeWidthOptions = [\r\n  { value: 0, label: 'None' },\r\n  { value: 1, label: 'Thin' },\r\n  { value: 2, label: 'Medium' },\r\n  { value: 3, label: 'Thick' },\r\n  { value: 4, label: 'Extra Thick' },\r\n];\r\n\r\nconst TextProperties: React.FC<TextPropertiesProps> = ({\r\n  properties,\r\n  updateObject,\r\n  Select,\r\n}) => (\r\n  <>\r\n    <div>\r\n      <label className=\"block text-sm font-medium text-gray-700\">Text</label>\r\n      <input\r\n        type=\"text\"\r\n        value={properties.text}\r\n        onChange={(e) => updateObject({ text: e.target.value })}\r\n        className=\"mt-1 px-2 py-1 w-full border rounded-md\"\r\n      />\r\n    </div>\r\n    <div>\r\n      <label className=\"block text-sm font-medium text-gray-700\">\r\n        Font Size\r\n      </label>\r\n      <div className=\"flex items-center mt-1\">\r\n        <button\r\n          className=\"px-2 py-1 bg-gray-200 rounded-l-md\"\r\n          onClick={() =>\r\n            updateObject({ fontSize: toFloat(properties.fontSize) - 1 })\r\n          }\r\n        >\r\n          -\r\n        </button>\r\n        <input\r\n          type=\"number\"\r\n          value={toFloat(properties.fontSize)}\r\n          onChange={(e) => updateObject({ fontSize: Number(e.target.value) })}\r\n          className=\"w-full px-2 py-1 text-center border-t border-b shadow-sm\"\r\n        />\r\n        <button\r\n          className=\"px-2 py-1 bg-gray-200 rounded-r-md\"\r\n          onClick={() =>\r\n            updateObject({ fontSize: toFloat(properties.fontSize) + 1 })\r\n          }\r\n        >\r\n          +\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <label className=\"block text-sm font-medium text-gray-700\">\r\n        Font Weight\r\n      </label>\r\n      <Select\r\n        options={fontWeightOptions}\r\n        value={properties.fontWeight}\r\n        onChange={(value) => updateObject({ fontWeight: value })}\r\n      />\r\n    </div>\r\n    <div>\r\n      <label className=\"block text-sm font-medium text-gray-700\">\r\n        Font Family\r\n      </label>\r\n      <Select\r\n        options={fontFamilyOptions}\r\n        value={properties.fontFamily}\r\n        onChange={(value) => updateObject({ fontFamily: value })}\r\n      />\r\n    </div>\r\n    <div>\r\n      <label className=\"block text-sm font-medium text-gray-700\">\r\n        Stroke Width\r\n      </label>\r\n      <Select\r\n        options={strokeWidthOptions.map((option) => ({\r\n          value: option.value.toString(),\r\n          label: option.label,\r\n        }))}\r\n        value={properties.strokeWidth?.toString() || '0'}\r\n        onChange={(value) => updateObject({ strokeWidth: Number(value) })}\r\n      />\r\n    </div>\r\n  </>\r\n);\r\n\r\nexport default TextProperties;\r\n","import { Properties } from '../../hooks';\r\nimport { useState, useEffect } from 'react';\r\n\r\ninterface ColorPropertiesProps {\r\n  properties: Properties;\r\n  updateObject: (updates: Partial<Properties>) => void;\r\n  objectType: string | null;\r\n}\r\n\r\nconst ColorProperties: React.FC<ColorPropertiesProps> = ({\r\n  properties,\r\n  updateObject,\r\n  objectType,\r\n}) => {\r\n  const [syncColors, setSyncColors] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Check if stroke matches fill initially\r\n    setSyncColors(properties.stroke === properties.fill);\r\n  }, [properties.stroke, properties.fill]);\r\n\r\n  const handleFillChange = (value: string) => {\r\n    updateObject({ fill: value });\r\n    if (syncColors) {\r\n      updateObject({ stroke: value });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700\">\r\n          Fill Color\r\n        </label>\r\n        <div className=\"flex items-center mt-1\">\r\n          <input\r\n            type=\"color\"\r\n            value={\r\n              typeof properties.fill === 'string' &&\r\n              /^#([0-9A-Fa-f]{6})$/.test(properties.fill)\r\n                ? '#ffffff'\r\n                : properties.fill?.toString() || '#ffffff'\r\n            }\r\n            onChange={(e) => handleFillChange(e.target.value)}\r\n            className=\"w-8 h-8 rounded-md border shadow-sm\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            value={\r\n              typeof properties.fill === 'string' &&\r\n              /^#([0-9A-Fa-f]{6})$/.test(properties.fill)\r\n                ? 'transparent'\r\n                : (properties.fill?.toString() || '').toUpperCase()\r\n            }\r\n            onChange={(e) => handleFillChange(e.target.value)}\r\n            className=\"ml-2 px-2 py-1 w-full border rounded-md shadow-sm\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <div className=\"flex items-center justify-between\">\r\n          <label className=\"block text-sm font-medium text-gray-700\">\r\n            Stroke Color\r\n          </label>\r\n          <label className=\"flex items-center space-x-1 text-xs text-gray-600\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={syncColors}\r\n              onChange={(e) => {\r\n                setSyncColors(e.target.checked);\r\n                if (e.target.checked) {\r\n                  updateObject({ stroke: properties.fill });\r\n                }\r\n              }}\r\n              className=\"w-3 h-3 rounded border-gray-300\"\r\n            />\r\n            <span>Sync with fill</span>\r\n          </label>\r\n        </div>\r\n        <div className=\"flex items-center mt-1\">\r\n          <input\r\n            type=\"color\"\r\n            value={\r\n              properties?.stroke === 'transparent'\r\n                ? '#ffffff'\r\n                : properties.stroke?.toString() || '#000000'\r\n            }\r\n            onChange={(e) => updateObject({ stroke: e.target.value })}\r\n            disabled={syncColors}\r\n            className={`w-8 h-8 rounded-md border shadow-sm ${\r\n              syncColors ? 'opacity-50' : ''\r\n            }`}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            value={\r\n              properties.stroke === 'transparent'\r\n                ? 'transparent'\r\n                : (properties.stroke?.toString() || '').toUpperCase()\r\n            }\r\n            onChange={(e) => updateObject({ stroke: e.target.value })}\r\n            disabled={syncColors}\r\n            className={`ml-2 px-2 py-1 w-full border rounded-md shadow-sm ${\r\n              syncColors ? 'opacity-50' : ''\r\n            }`}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ColorProperties;\r\n","import React from 'react';\r\nimport { Properties } from '../../hooks';\r\n\r\ninterface SeatAttributesProps {\r\n  properties: Properties;\r\n  updateObject: (updates: Partial<Properties>) => void;\r\n  Select: React.FC<{\r\n    options: { value: string; label: string }[];\r\n    value: string;\r\n    onChange: (value: string) => void;\r\n  }>;\r\n}\r\n\r\nconst statusOptions = [\r\n  { value: 'available', label: 'Available' },\r\n  { value: 'reserved', label: 'Reserved' },\r\n  { value: 'sold', label: 'Sold' },\r\n];\r\n\r\nconst categoryOptions = [\r\n  { value: 'standard', label: 'Standard' },\r\n  { value: 'vip', label: 'VIP' },\r\n  { value: 'premium', label: 'Premium' },\r\n];\r\n\r\nconst SeatAttributes: React.FC<SeatAttributesProps> = ({\r\n  properties,\r\n  updateObject,\r\n  Select,\r\n}) => (\r\n  <div className=\"space-y-4\">\r\n    <div>\r\n      <label className=\"block text-sm font-medium text-gray-700\">\r\n        Seat Number\r\n      </label>\r\n      <input\r\n        type=\"text\"\r\n        value={properties.seatNumber || ''}\r\n        onChange={(e) => updateObject({ seatNumber: e.target.value })}\r\n        className=\"mt-1 px-2 py-1 w-full border rounded-md\"\r\n      />\r\n    </div>\r\n    <div>\r\n      <label className=\"block text-sm font-medium text-gray-700\">\r\n        Category\r\n      </label>\r\n      <Select\r\n        options={categoryOptions}\r\n        value={properties.category || 'standard'}\r\n        onChange={(value) => updateObject({ category: value })}\r\n      />\r\n    </div>\r\n    <div>\r\n      <label className=\"block text-sm font-medium text-gray-700\">Price</label>\r\n      <input\r\n        type=\"number\"\r\n        value={properties.price || 0}\r\n        onChange={(e) => updateObject({ price: Number(e.target.value) })}\r\n        className=\"mt-1 px-2 py-1 w-full border rounded-md\"\r\n      />\r\n    </div>\r\n    <div>\r\n      <label className=\"block text-sm font-medium text-gray-700\">Status</label>\r\n      <Select\r\n        options={statusOptions}\r\n        value={properties.status || 'available'}\r\n        onChange={(value) =>\r\n          updateObject({ status: value as Properties['status'] })\r\n        }\r\n      />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default SeatAttributes;\r\n","import { useEffect, useState } from 'react';\r\nimport { LuPlus } from 'react-icons/lu';\r\nimport { useEventGuiStore } from '@/zustand';\r\nimport { CustomFabricObject } from '@/types/fabric-types';\r\nimport { Select } from '@/components/ui';\r\nimport { useObjectProperties, useObjectUpdater } from './hooks';\r\nimport CommonProperties from './components/commonProperties';\r\nimport CircleProperties from './components/circleProperties';\r\nimport RectangleProperties from './components/rectangleProperties';\r\nimport TextProperties from './components/textProperties';\r\nimport ColorProperties from './components/colorProperties';\r\nimport { Pattern, Gradient } from 'fabric/fabric-impl';\r\nimport SeatAttributes from './components/seatAttributes';\r\n\r\nexport type Mode =\r\n  | 'select'\r\n  | 'one-seat'\r\n  | 'multiple-seat'\r\n  | 'shape-square'\r\n  | 'text';\r\n\r\nconst Sidebar: React.FC = () => {\r\n  const { canvas } = useEventGuiStore();\r\n  const [selectedObject, setSelectedObject] =\r\n    useState<CustomFabricObject | null>(null);\r\n  const [objectType, setObjectType] = useState<\r\n    'circle' | 'rect' | 'i-text' | null\r\n  >(null);\r\n  const [activeTab, setActiveTab] = useState<'basic' | 'attributes'>('basic');\r\n\r\n  const { properties, setProperties } = useObjectProperties(\r\n    canvas,\r\n    selectedObject\r\n  );\r\n  const { updateObject } = useObjectUpdater(canvas, setProperties);\r\n\r\n  // ::::::::::::::::::::::: Listen for object selection\r\n  useEffect(() => {\r\n    if (!canvas) return;\r\n\r\n    const updateSelectedObject = () => {\r\n      const activeObject = canvas.getActiveObject() as CustomFabricObject;\r\n      setSelectedObject(activeObject || null);\r\n      setObjectType(activeObject?.type as 'circle' | 'rect' | 'i-text' | null);\r\n      // --- Sync sidebar properties with active object ---\r\n      if (activeObject) {\r\n        setProperties((prev) => ({\r\n          ...prev,\r\n          angle: activeObject.angle ?? prev.angle,\r\n          radius: (activeObject as any).radius ?? prev.radius,\r\n          width:\r\n            (activeObject.width ?? prev.width) * (activeObject.scaleX ?? 1),\r\n          height:\r\n            (activeObject.height ?? prev.height) * (activeObject.scaleY ?? 1),\r\n          fill: activeObject.fill ?? prev.fill,\r\n          stroke: activeObject.stroke ?? prev.stroke,\r\n          text: (activeObject as any).text ?? prev.text,\r\n          fontSize: (activeObject as any).fontSize ?? prev.fontSize,\r\n          fontWeight: (activeObject as any).fontWeight ?? prev.fontWeight,\r\n          fontFamily: (activeObject as any).fontFamily ?? prev.fontFamily,\r\n          left: activeObject.left ?? prev.left,\r\n          top: activeObject.top ?? prev.top,\r\n          rx: (activeObject as any).rx ?? prev.rx,\r\n          ry: (activeObject as any).ry ?? prev.ry,\r\n        }));\r\n      }\r\n    };\r\n\r\n    const eventsToListen = [\r\n      'selection:created',\r\n      'selection:updated',\r\n      'object:moving',\r\n      'object:rotating',\r\n      'object:scaling',\r\n      'object:modified',\r\n    ];\r\n\r\n    // ::::::::::::::: Loop through events to call update function on\r\n    eventsToListen.forEach((event) => {\r\n      canvas.on(event, updateSelectedObject);\r\n    });\r\n\r\n    canvas.on('selection:cleared', () => {\r\n      setSelectedObject(null);\r\n      setObjectType(null);\r\n    });\r\n\r\n    return () => {\r\n      eventsToListen.forEach((event) => {\r\n        canvas.off(event, updateSelectedObject);\r\n      });\r\n      canvas.off('selection:cleared');\r\n    };\r\n  }, [canvas]);\r\n\r\n  return (\r\n    <div className=\"w-[20rem] min-h-screen bg-gray-50 p-4 space-y-4\">\r\n      <div className=\"bg-white rounded-md shadow\">\r\n        <div className=\"flex items-center justify-between p-2 bg-gray-200 rounded-t-md\">\r\n          <span className=\"font-semibold\">Zones</span>\r\n          <button className=\"text-gray-600 hover:text-gray-800\">\r\n            <LuPlus size={20} />\r\n          </button>\r\n        </div>\r\n        <div className=\"p-2 flex items-center space-x-2\">\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"ground-floor\"\r\n            className=\"rounded text-gray-600\"\r\n          />\r\n          <label htmlFor=\"ground-floor\">Ground floor</label>\r\n        </div>\r\n      </div>\r\n\r\n      {selectedObject && (\r\n        <div className=\"bg-white rounded-md shadow p-4 space-y-4\">\r\n          {objectType === 'circle' && (\r\n            <div className=\"flex items-center border-solid gap-2 border-0 border-b border-gray-200 mb-4\">\r\n              <button\r\n                className={`px-3 py-1.5 text-sm font-medium ${\r\n                  activeTab === 'basic'\r\n                    ? 'border-0 border-b-2 border-solid border-gray-500 text-gray-600'\r\n                    : 'text-gray-500 hover:text-gray-700'\r\n                }`}\r\n                onClick={() => setActiveTab('basic')}\r\n              >\r\n                Properties\r\n              </button>\r\n              <button\r\n                className={`px-3 py-1.5 text-sm font-medium ${\r\n                  activeTab === 'attributes'\r\n                    ? 'border-0 border-b-2 border-solid border-gray-500 text-gray-600'\r\n                    : 'text-gray-500 hover:text-gray-700'\r\n                }`}\r\n                onClick={() => setActiveTab('attributes')}\r\n              >\r\n                Attributes\r\n              </button>\r\n            </div>\r\n          )}\r\n\r\n          {objectType === 'circle' && activeTab === 'attributes' ? (\r\n            <SeatAttributes\r\n              properties={properties}\r\n              updateObject={updateObject}\r\n              Select={Select}\r\n            />\r\n          ) : (\r\n            <>\r\n              <h3 className=\"font-semibold\">Properties</h3>\r\n              <CommonProperties\r\n                properties={properties}\r\n                updateObject={updateObject}\r\n              />\r\n\r\n              {objectType === 'circle' && (\r\n                <CircleProperties\r\n                  properties={properties}\r\n                  updateObject={updateObject}\r\n                  Select={Select}\r\n                />\r\n              )}\r\n\r\n              {objectType === 'rect' && (\r\n                <RectangleProperties\r\n                  properties={properties}\r\n                  updateObject={updateObject}\r\n                  Select={Select}\r\n                />\r\n              )}\r\n\r\n              {objectType === 'i-text' && (\r\n                <TextProperties\r\n                  properties={properties}\r\n                  updateObject={updateObject}\r\n                  Select={Select}\r\n                />\r\n              )}\r\n\r\n              <ColorProperties\r\n                properties={properties}\r\n                updateObject={updateObject}\r\n                objectType={objectType}\r\n              />\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import { fabric } from 'fabric';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nclass CustomRect extends fabric.Rect {\r\n  readonly id: string;\r\n\r\n  constructor(options: any) {\r\n    super(options);\r\n    this.id = options.id || uuidv4();\r\n  }\r\n\r\n  toObject(propertiesToInclude: string[] = []) {\r\n    return fabric.util.object.extend(super.toObject(propertiesToInclude), {\r\n      id: this.id,\r\n      borderColor: this.borderColor,\r\n      borderDashArray: this.borderDashArray,\r\n      cornerColor: this.cornerColor,\r\n      cornerSize: this.cornerSize,\r\n      cornerStrokeColor: this.cornerStrokeColor,\r\n      transparentCorners: this.transparentCorners,\r\n      rx: this.rx,\r\n      ry: this.ry,\r\n    });\r\n  }\r\n}\r\n\r\nclass CustomCircle extends fabric.Circle {\r\n  readonly id: string;\r\n\r\n  constructor(options: any) {\r\n    super(options);\r\n    this.id = options.id || uuidv4();\r\n  }\r\n\r\n  toObject(propertiesToInclude: string[] = []) {\r\n    return fabric.util.object.extend(super.toObject(propertiesToInclude), {\r\n      id: this.id,\r\n      borderColor: this.borderColor,\r\n      borderDashArray: this.borderDashArray,\r\n      cornerColor: this.cornerColor,\r\n      cornerSize: this.cornerSize,\r\n      cornerStrokeColor: this.cornerStrokeColor,\r\n      transparentCorners: this.transparentCorners,\r\n      rx: this.radius,\r\n      ry: this.radius,\r\n    });\r\n  }\r\n}\r\n\r\nclass CustomText extends fabric.IText {\r\n  readonly id: string;\r\n\r\n  constructor(options: any) {\r\n    super(options.text, options);\r\n    this.id = options.id || uuidv4();\r\n  }\r\n\r\n  toObject(propertiesToInclude: string[] = []) {\r\n    return fabric.util.object.extend(super.toObject(propertiesToInclude), {\r\n      id: this.id,\r\n      borderColor: this.borderColor,\r\n      borderDashArray: this.borderDashArray,\r\n      cornerColor: this.cornerColor,\r\n      cornerSize: this.cornerSize,\r\n      cornerStrokeColor: this.cornerStrokeColor,\r\n      transparentCorners: this.transparentCorners,\r\n    });\r\n  }\r\n}\r\n\r\n// ::::::::::::::: Create rectangle object\r\nconst createRect = (left: number, top: number) => {\r\n  const rect = new CustomRect({\r\n    left,\r\n    top,\r\n    fill: '#cccccc',\r\n    stroke: 'black',\r\n    strokeWidth: 1,\r\n    width: 100,\r\n    height: 100,\r\n    selectable: true,\r\n    borderColor: 'green',\r\n    borderDashArray: [2, 4],\r\n    padding: 2,\r\n    cornerColor: 'lightblue',\r\n    cornerSize: 5,\r\n    cornerStrokeColor: 'blue',\r\n    transparentCorners: false,\r\n    id: uuidv4(),\r\n    strokeUniform: true,\r\n    rx: 0,\r\n    ry: 0,\r\n  });\r\n\r\n  rect.setControlsVisibility({\r\n    mt: false,\r\n    mb: false,\r\n    ml: false,\r\n    mr: false,\r\n  });\r\n\r\n  return rect;\r\n};\r\n\r\n// ::::::::::::::: Create seat object\r\nconst createSeat = (left: number, top: number) => {\r\n  const seat = new CustomCircle({\r\n    left,\r\n    top,\r\n    fill: 'transparent',\r\n    stroke: 1,\r\n    radius: 10,\r\n    selectable: true,\r\n    borderColor: 'green',\r\n    borderDashArray: [2, 4],\r\n    padding: 2,\r\n    cornerColor: 'lightblue',\r\n    cornerSize: 5,\r\n    cornerStrokeColor: 'blue',\r\n    transparentCorners: false,\r\n    rx: 0.25,\r\n    ry: 0.25,\r\n    id: uuidv4(),\r\n    strokeUniform: true,\r\n  });\r\n\r\n  seat.setControlsVisibility({\r\n    mt: false,\r\n    mb: false,\r\n    ml: false,\r\n    mr: false,\r\n  });\r\n\r\n  return seat;\r\n};\r\n\r\n// ::::::::::::::: Create text object\r\nconst createText = (left: number, top: number, text: string = 'Type here') => {\r\n  const textObject = new CustomText({\r\n    left,\r\n    top,\r\n    text,\r\n    fontSize: 20,\r\n    fill: 'black',\r\n    selectable: true,\r\n    borderColor: 'green',\r\n    borderDashArray: [2, 4],\r\n    padding: 2,\r\n    cornerColor: 'lightblue',\r\n    cornerSize: 5,\r\n    cornerStrokeColor: 'blue',\r\n    transparentCorners: false,\r\n    fontFamily: 'sans-serif',\r\n    id: uuidv4(),\r\n    strokeUniform: true,\r\n  });\r\n\r\n  textObject.setControlsVisibility({\r\n    mt: false,\r\n    mb: false,\r\n    ml: false,\r\n    mr: false,\r\n  });\r\n\r\n  return textObject;\r\n};\r\n\r\n\r\nexport { CustomRect, CustomCircle, CustomText, createRect, createSeat, createText };","import { useEffect } from 'react';\r\nimport { fabric } from 'fabric';\r\nimport { createSeat } from '../components/createObject';\r\n\r\nconst useCanvasSetup = (canvasRef: React.RefObject<HTMLCanvasElement>, canvasParent: React.RefObject<HTMLDivElement>, setCanvas: (canvas: fabric.Canvas) => void) => {\r\n  useEffect(() => {\r\n    if (!canvasRef.current || !canvasParent.current) return;\r\n\r\n    const newCanvas = new fabric.Canvas(canvasRef.current);\r\n    setCanvas(newCanvas);\r\n\r\n    const resizeCanvas = () => {\r\n      if (canvasParent.current) {\r\n        const parent = canvasParent.current;\r\n        if (parent) {\r\n          const { width, height } = parent.getBoundingClientRect();\r\n          newCanvas.setDimensions({ width, height }, { cssOnly: false });\r\n        }\r\n      }\r\n    };\r\n\r\n    resizeCanvas();\r\n    window.addEventListener('resize', resizeCanvas);\r\n\r\n    const seat = createSeat(100, 100);\r\n    seat.angle = 45;\r\n    // newCanvas.add(seat);\r\n\r\n    newCanvas.on('object:moving', (event) => {\r\n      const obj = event.target;\r\n      const { width: canvasWidth, height: canvasHeight } = newCanvas;\r\n\r\n      if (obj) {\r\n        obj.setCoords(); // Ensure bounding box is up to date\r\n        const rect = obj.getBoundingRect();\r\n        let dx = 0, dy = 0;\r\n        // Clamp left/right\r\n        if (rect.left < 0) {\r\n          dx = -rect.left;\r\n        } else if (rect.left + rect.width > canvasWidth) {\r\n          dx = canvasWidth - (rect.left + rect.width);\r\n        }\r\n        // Clamp top/bottom\r\n        if (rect.top < 0) {\r\n          dy = -rect.top;\r\n        } else if (rect.top + rect.height > canvasHeight) {\r\n          dy = canvasHeight - (rect.top + rect.height);\r\n        }\r\n        if (dx !== 0 || dy !== 0) {\r\n          obj.left = (obj.left ?? 0) + dx;\r\n          obj.top = (obj.top ?? 0) + dy;\r\n          obj.setCoords();\r\n        }\r\n      }\r\n    });\r\n\r\n    // Enforce strokeUniform: true for all supported objects on selection\r\n    newCanvas.on('selection:created', (event) => {\r\n      const objs = event.selected || (event.target ? [event.target] : []);\r\n      objs.forEach(obj => {\r\n        if (['rect', 'circle', 'i-text'].includes(obj.type)) {\r\n          obj.strokeUniform = true;\r\n        }\r\n      });\r\n    });\r\n    // Also enforce after loading from JSON (if needed)\r\n    newCanvas.on('after:render', () => {\r\n      newCanvas.getObjects().forEach(obj => {\r\n        if (['rect', 'circle', 'i-text'].includes(obj.type)) {\r\n          obj.strokeUniform = true;\r\n        }\r\n      });\r\n    });\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', resizeCanvas);\r\n      newCanvas.dispose();\r\n    };\r\n  }, [canvasRef, canvasParent, setCanvas]);\r\n};\r\n\r\nexport default useCanvasSetup;","import { useEffect } from 'react';\r\nimport { fabric } from 'fabric';\r\n\r\nconst useSelectionHandler = (canvas: fabric.Canvas | null) => {\r\n  useEffect(() => {\r\n    if (!canvas) return;\r\n\r\n    const handleSelection = () => {\r\n      const activeObject = canvas.getActiveObject();\r\n      \r\n      if (activeObject && activeObject.type === 'activeSelection') {\r\n        activeObject.setControlsVisibility({\r\n          mt: false,\r\n          mb: false,\r\n          ml: false,\r\n          mr: false,\r\n        });\r\n\r\n        activeObject.borderColor = 'green';\r\n        activeObject.borderDashArray = [2, 4];\r\n        activeObject.padding = 4;\r\n        activeObject.cornerColor = 'lightblue';\r\n        activeObject.cornerSize = 7;\r\n        activeObject.cornerStrokeColor = 'blue';\r\n        \r\n        canvas.requestRenderAll();\r\n      }\r\n    };\r\n\r\n    canvas.on('selection:created', handleSelection);\r\n    canvas.on('selection:updated', handleSelection);\r\n\r\n    return () => {\r\n      canvas.off('selection:created', handleSelection);\r\n      canvas.off('selection:updated', handleSelection);\r\n    };\r\n  }, [canvas]);\r\n};\r\n\r\nexport default useSelectionHandler;","import { useEffect, useRef } from 'react';\r\nimport { fabric } from 'fabric';\r\nimport { createSeat } from '../components/createObject';\r\nimport { Mode } from '@/zustand/store/eventGuiStore';\r\n\r\nconst useMultipleSeatCreator = (\r\n  canvas: fabric.Canvas | null,\r\n  toolMode: Mode,\r\n  setToolMode: (mode: Mode) => void\r\n) => {\r\n  const startPointRef = useRef<{ x: number; y: number } | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (!canvas) return;\r\n\r\n    const handleMouseDown = (event: fabric.IEvent) => {\r\n      if (toolMode !== 'multiple-seat') return;\r\n      const pointer = canvas.getPointer(event.e);\r\n      startPointRef.current = { x: pointer.x, y: pointer.y };\r\n    };\r\n\r\n    const handleMouseUp = (event: fabric.IEvent) => {\r\n      if (toolMode !== 'multiple-seat' || !startPointRef.current) return;\r\n\r\n      const endPoint = canvas.getPointer(event.e);\r\n      const startPoint = startPointRef.current;\r\n\r\n      const width = Math.abs(endPoint.x - startPoint.x);\r\n      const height = Math.abs(endPoint.y - startPoint.y);\r\n\r\n      const rows = Math.floor(height / 60);\r\n      const cols = Math.floor(width / 60);\r\n\r\n      for (let i = 0; i < rows; i++) {\r\n        for (let j = 0; j < cols; j++) {\r\n          const left = startPoint.x + j * 60;\r\n          const top = startPoint.y + i * 60;\r\n          const seat = createSeat(left, top);\r\n          canvas.add(seat);\r\n        }\r\n      }\r\n\r\n      canvas.renderAll();\r\n      startPointRef.current = null;\r\n      setToolMode('select');\r\n    };\r\n\r\n    canvas.on('mouse:down', handleMouseDown);\r\n    canvas.on('mouse:up', handleMouseUp);\r\n\r\n    return () => {\r\n      canvas.off('mouse:down', handleMouseDown);\r\n      canvas.off('mouse:up', handleMouseUp);\r\n    };\r\n  }, [canvas, toolMode, setToolMode]);\r\n};\r\n\r\nexport default useMultipleSeatCreator;","import { useEffect } from 'react';\r\nimport { fabric } from 'fabric';\r\n\r\nconst useObjectDeletion = (canvas: fabric.Canvas | null, toolAction: string | null) => {\r\n  useEffect(() => {\r\n    if (!canvas) return;\r\n\r\n    const deleteFunction = () => {\r\n      const activeObject = canvas.getActiveObject();\r\n      if (!activeObject) return;\r\n\r\n      if (activeObject.type === 'activeSelection') {\r\n        const activeSelection = activeObject as fabric.ActiveSelection;\r\n        const objects = [...activeSelection.getObjects()];\r\n        objects.forEach(obj => canvas.remove(obj));\r\n      } else {\r\n        canvas.remove(activeObject);\r\n      }\r\n\r\n      canvas.discardActiveObject();\r\n      canvas.renderAll();\r\n    };\r\n\r\n    const handleKeyDown = (event: KeyboardEvent) => {\r\n      if (event.key === 'Delete' || (event.ctrlKey && event.key.toLowerCase() === 'd')) {\r\n        deleteFunction();\r\n      }\r\n    };\r\n\r\n    if (toolAction === 'delete') {\r\n      deleteFunction();\r\n    }\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [canvas, toolAction]);\r\n};\r\n\r\nexport default useObjectDeletion;","import { useEffect, useRef } from 'react';\r\nimport { fabric } from 'fabric';\r\nimport { createSeat, createRect, createText } from '../components/createObject';\r\nimport { Mode } from '@/zustand/store/eventGuiStore';\r\n\r\nconst useObjectCreator = (\r\n  canvas: fabric.Canvas | null,\r\n  toolMode: Mode,\r\n  setToolMode: (mode: Mode) => void\r\n) => {\r\n  const startPointRef = useRef<{ x: number; y: number } | null>(null);\r\n  const rectRef = useRef<fabric.Rect | null>(null);\r\n  const isDraggingRef = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (!canvas) return;\r\n\r\n    const handleMouseDown = (event: fabric.IEvent) => {\r\n      const pointer = canvas.getPointer(event.e);\r\n\r\n      if (toolMode === 'one-seat') {\r\n        const seat = createSeat(pointer.x, pointer.y);\r\n        canvas.add(seat);\r\n        canvas.renderAll();\r\n      } else if (toolMode === 'shape-square') {\r\n        const rect = createRect(pointer.x, pointer.y);\r\n        rectRef.current = rect;\r\n        isDraggingRef.current = false;\r\n        canvas.add(rect);\r\n        canvas.setActiveObject(rect);\r\n        startPointRef.current = { x: pointer.x, y: pointer.y };\r\n      } else if (toolMode === 'text') {\r\n        const text = createText(pointer.x, pointer.y);\r\n        canvas.add(text);\r\n        canvas.setActiveObject(text);\r\n        text.enterEditing();\r\n        text.selectAll();\r\n      }\r\n    };\r\n\r\n    const handleMouseMove = (event: fabric.IEvent) => {\r\n      if (toolMode === 'shape-square' && startPointRef.current && rectRef.current) {\r\n        const pointer = canvas.getPointer(event.e);\r\n        const width = Math.abs(pointer.x - startPointRef.current.x);\r\n        const height = Math.abs(pointer.y - startPointRef.current.y);\r\n        rectRef.current.set({\r\n          width: width,\r\n          height: height\r\n        });\r\n        isDraggingRef.current = true;\r\n        canvas.renderAll();\r\n      }\r\n    };\r\n\r\n    const handleMouseUp = () => {\r\n      if (toolMode === 'shape-square' && rectRef.current) {\r\n        if (!isDraggingRef.current) {\r\n          // If not dragged, set to default size\r\n          rectRef.current.set({ width: 100, height: 100 });\r\n          canvas.renderAll();\r\n        }\r\n        startPointRef.current = null;\r\n        rectRef.current = null;\r\n        isDraggingRef.current = false;\r\n      }\r\n      setToolMode('select');\r\n    };\r\n\r\n    canvas.on('mouse:down', handleMouseDown);\r\n    canvas.on('mouse:move', handleMouseMove);\r\n    canvas.on('mouse:up', handleMouseUp);\r\n\r\n    return () => {\r\n      canvas.off('mouse:down', handleMouseDown);\r\n      canvas.off('mouse:move', handleMouseMove);\r\n      canvas.off('mouse:up', handleMouseUp);\r\n    };\r\n  }, [canvas, toolMode, setToolMode]);\r\n};\r\n\r\nexport default useObjectCreator;","import { useEffect } from 'react'\r\nimport { useEventGuiStore } from '@/zustand'\r\nimport useClipboardActions from './useClipboardActions'\r\n\r\nconst useKeyboardShortcuts = () => {\r\n  const { canvas, setLastClickedPoint } = useEventGuiStore()\r\n  const { copySelectedObjects, cutSelectedObjects, pasteObjects } = useClipboardActions()\r\n\r\n  useEffect(() => {\r\n    if (!canvas) return\r\n\r\n    const handleKeyDown = (e: KeyboardEvent) => {\r\n      if (e.ctrlKey) {\r\n        switch (e.key.toLowerCase()) {\r\n          case 'c':\r\n            e.preventDefault()\r\n            copySelectedObjects()\r\n            break\r\n          case 'x':\r\n            e.preventDefault()\r\n            cutSelectedObjects()\r\n            break\r\n          case 'v':\r\n            e.preventDefault()\r\n            pasteObjects()\r\n            break\r\n        }\r\n      }\r\n    }\r\n\r\n    const handleMouseDown = (event: fabric.IEvent) => {\r\n      const pointer = canvas.getPointer(event.e)\r\n      setLastClickedPoint({ x: pointer.x, y: pointer.y })\r\n    }\r\n\r\n    document.addEventListener('keydown', handleKeyDown)\r\n    canvas.on('mouse:down', handleMouseDown)\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleKeyDown)\r\n      canvas.off('mouse:down', handleMouseDown)\r\n    }\r\n  }, [canvas, copySelectedObjects, cutSelectedObjects, pasteObjects, setLastClickedPoint])\r\n}\r\n\r\nexport default useKeyboardShortcuts","import { useRef } from 'react';\r\nimport Toolbar from './toolbar';\r\nimport Sidebar from './sidebar';\r\nimport { useEventGuiStore } from '@/zustand';\r\nimport useCanvasSetup from '@/hooks/useCanvasSetup';\r\nimport useSelectionHandler from '@/hooks/useSelectionHandler';\r\nimport useMultipleSeatCreator from '@/hooks/useMultipleSeatCreator';\r\nimport useObjectDeletion from '@/hooks/useObjectDeletion';\r\nimport useObjectCreator from '@/hooks/useObjectCreator';\r\nimport useKeyboardShortcuts from '@/hooks/useKeyboardShortcuts';\r\nimport useUndoRedo from '@/hooks/useUndoRedo';\r\nimport '@/index.css';\r\n\r\nconst SeatCanvas = ({ className }: { className?: string }) => {\r\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\r\n  const canvasParent = useRef<HTMLDivElement>(null);\r\n  const { canvas, setCanvas, toolMode, setToolMode, toolAction } =\r\n    useEventGuiStore();\r\n\r\n  useCanvasSetup(canvasRef, canvasParent, setCanvas);\r\n  useSelectionHandler(canvas);\r\n  useMultipleSeatCreator(canvas, toolMode, setToolMode);\r\n  useObjectDeletion(canvas, toolAction);\r\n  useObjectCreator(canvas, toolMode, setToolMode);\r\n  useUndoRedo();\r\n\r\n  useKeyboardShortcuts();\r\n\r\n  return (\r\n    <div className={`relative size-full bg-gray-200 ${className}`}>\r\n      <Toolbar />\r\n      <div className=\"flex justify-between w-full\">\r\n        <div\r\n          className=\"w-full max-w-[45rem] mx-auto bg-gray-100\"\r\n          ref={canvasParent}\r\n        >\r\n          <canvas ref={canvasRef} />\r\n        </div>\r\n        <Sidebar />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SeatCanvas;\r\n"]}