{"version":3,"sources":["../src/zustand/store/eventGuiStore.ts","../src/hooks/useClipboardActions.ts","../src/hooks/useUndoRedo.ts","../src/components/toolbar/index.tsx","../src/components/ui/select/index.tsx","../src/components/sidebar/hooks/useObjectProperties.ts","../src/components/sidebar/hooks/useObjectUpdater.ts","../src/utils/index.ts","../src/components/sidebar/components/commonProperties/index.tsx","../src/components/sidebar/components/circleProperties/index.tsx","../src/components/sidebar/components/rectangleProperties/index.tsx","../src/components/sidebar/components/textProperties/index.tsx","../src/components/sidebar/components/colorProperties/index.tsx","../src/components/sidebar/index.tsx","../src/components/createObject/index.ts","../src/hooks/useCanvasSetup.ts","../src/hooks/useSelectionHandler.ts","../src/hooks/useMultipleSeatCreator.ts","../src/hooks/useObjectDeletion.ts","../src/hooks/useObjectCreator.ts","../src/hooks/useKeyboardShortcuts.ts","../src/components/index.tsx"],"names":["uuidv4","fabric","useState","useEffect","jsxs","jsx","Fragment","Select","LuPlus","useRef"],"mappings":"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","file":"index.js","sourcesContent":["import { create } from 'zustand'\r\nimport { fabric } from 'fabric'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { CustomRect, CustomCircle, CustomText } from '@/pages/gui/components/createObject';\r\n\r\ninterface Seat {\r\n  id: string\r\n  left: number\r\n  top: number\r\n  radius: number\r\n  fill: string\r\n  stroke: string\r\n  text: string\r\n  textSize: number\r\n  textColor: string\r\n}\r\n\r\ninterface Zone {\r\n  id: string\r\n  name: string\r\n  isChecked: boolean\r\n}\r\n\r\nexport type Mode = 'select' | 'one-seat' | 'multiple-seat' | 'shape-square' | 'text'\r\nexport type Action = null | 'delete' | 'copy' | 'cut' | 'paste'\r\n\r\ninterface EventGuiState {\r\n  // ::::::::::: Loading state\r\n  loading: boolean\r\n\r\n  // ::::::::::: Canvas\r\n  canvas: fabric.Canvas | null\r\n  setCanvas: (canvas: fabric.Canvas) => void\r\n  seats: Seat[]\r\n  addSeat: (seat: Seat) => void\r\n  updateSeat: (id: string, updates: Partial<Seat>) => void\r\n  deleteSeat: (id: string) => void\r\n  selectedSeatIds: string[]\r\n\r\n  // ::::::::::: Mode\r\n  toolMode: Mode\r\n  setToolMode: (mode: Mode) => void\r\n\r\n  // ::::::::::: Action\r\n  toolAction: Action\r\n  setToolAction: (action: Action) => void\r\n\r\n  setSelectedSeatIds: (ids: string[]) => void\r\n  isMultipleSeatMode: boolean\r\n  setIsMultipleSeatMode: (isCreating: boolean) => void\r\n  zones: Zone[]\r\n  addZone: (name: string) => void\r\n  updateZone: (id: string, updates: Partial<Zone>) => void\r\n  deleteZone: (id: string) => void\r\n  zoomLevel: number\r\n  setZoomLevel: (level: number) => void\r\n\r\n  // :::::::::::::::: Clipboard \r\n  clipboard: fabric.Object[] | null\r\n  setClipboard: (objects: fabric.Object[] | null) => void\r\n  lastClickedPoint: { x: number; y: number } | null\r\n  setLastClickedPoint: (point: { x: number; y: number } | null) => void\r\n\r\n  \r\n  // New properties for undo/redo functionality\r\n  undoStack: string[]\r\n  redoStack: string[]\r\n  addToUndoStack: (state: string) => void\r\n  undo: () => void\r\n  redo: () => void\r\n}\r\n\r\nexport const useEventGuiStore = create<EventGuiState>((set, get) => ({\r\n  // ::::::::::::::::::: Loading state\r\n  loading: false,\r\n  \r\n  // ::::::::::::::::::: Canvas state\r\n  canvas: null,\r\n  setCanvas: (canvas) => set({ canvas }),\r\n  \r\n  // ::::::::::::::::::: Seat states\r\n  seats: [],\r\n  // ::::::::::::::::::: Add Seat \r\n  addSeat: (seat) => set((state) => ({ seats: [...state.seats, seat] })),\r\n  // ::::::::::::::::::: Update Seat\r\n  updateSeat: (id, updates) => set((state) => ({\r\n    seats: state.seats.map((seat) => (seat.id === id ? { ...seat, ...updates } : seat))\r\n  })),\r\n  // ::::::::::::::::::: Delete Seat\r\n  deleteSeat: (id) => set((state) => ({\r\n    seats: state.seats.filter((seat) => seat.id !== id)\r\n  })),\r\n\r\n  // ::::::::::::::::::: Selected Seat ID\r\n  selectedSeatIds: [],\r\n  setSelectedSeatIds: (ids) => set({ selectedSeatIds: ids }),\r\n\r\n  // ::::::::::::::::::: Multiple seat creation mode state\r\n  isMultipleSeatMode: false,\r\n  setIsMultipleSeatMode: (isCreating) => set({ isMultipleSeatMode: isCreating }),\r\n  \r\n  // ::::::::::::::::::: Zone states\r\n  zones: [{ id: uuidv4(), name: 'Ground floor', isChecked: true }],\r\n  // ::::::::::::::::::: Add zone\r\n  addZone: (name) => set((state) => ({\r\n    zones: [...state.zones, { id: uuidv4(), name, isChecked: true }]\r\n  })),\r\n  // ::::::::::::::::::: Update zone\r\n  updateZone: (id, updates) => set((state) => ({\r\n    zones: state.zones.map((zone) => (zone.id === id ? { ...zone, ...updates } : zone))\r\n  })),\r\n  // ::::::::::::::::::: Delete zone\r\n  deleteZone: (id) => set((state) => ({\r\n    zones: state.zones.filter((zone) => zone.id !== id)\r\n  })),\r\n  \r\n  // ::::::::::::::::::: Zoom level state\r\n  zoomLevel: 100,\r\n  setZoomLevel: (level) => set({ zoomLevel: level }),\r\n\r\n  // ::::::::::::::::::: Mode state\r\n  toolMode: 'select',\r\n  setToolMode: (mode: Mode) => set({toolMode: mode}),\r\n\r\n  // ::::::::::::::::::: Action state\r\n  toolAction: null,\r\n  setToolAction: (action: Action) => set({toolAction: action}),\r\n\r\n  // ::::::::::::::::::: Clipboard state\r\n  clipboard: null,\r\n  setClipboard: (objects) => set({ clipboard: objects }),\r\n  lastClickedPoint: null,\r\n  setLastClickedPoint: (point) => set({ lastClickedPoint: point }),\r\n\r\n  \r\n  // ::::::::::::::::::::: Undo/redo functionality\r\n  undoStack: [],\r\n  redoStack: [],\r\n  addToUndoStack: (state) => {\r\n    const { loading, undoStack } = get();\r\n    const lastState = undoStack[undoStack.length - 1];\r\n\r\n    if (lastState !== state && !loading) {\r\n      set((prevState) => ({\r\n        undoStack: [...prevState.undoStack, state],\r\n        redoStack: [],\r\n      }));\r\n    }\r\n  },\r\n\r\n  // ::::::::::::::: Function: UNDO\r\n  undo: () => {\r\n    const { canvas, undoStack, redoStack } = get();\r\n\r\n    if (undoStack.length > 1 && canvas) {\r\n      // :::::::::::::::: set loading to true\r\n      set({ loading: true });\r\n\r\n      const currentState = JSON.stringify(canvas.toJSON());\r\n      const previousState = undoStack[undoStack.length - 2];\r\n\r\n      // ::::::::::::: update the canvas\r\n      canvas.loadFromJSON(previousState, () => {\r\n        canvas.getObjects().forEach((obj) => {\r\n          if (obj instanceof fabric.Circle) {\r\n            obj.setControlsVisibility({\r\n              mt: false, mb: false, ml: false, mr: false,\r\n            });\r\n          }\r\n        });\r\n        canvas.renderAll();\r\n        set({\r\n          undoStack: undoStack.slice(0, -1),\r\n          redoStack: [currentState, ...redoStack],\r\n        });\r\n      });\r\n\r\n      // ::::::::::::::::: set loading to false\r\n      set({ loading: false });\r\n      \r\n      // console.log('\\n\\nundo func: ', undoStack);\r\n    }\r\n  },\r\n\r\n  // :::::::::::::: Function: REDO \r\n  redo: () => {\r\n    const { canvas, undoStack, redoStack } = get();\r\n\r\n    if (redoStack.length > 0 && canvas) {\r\n      // :::::::::::::::: set loading to true\r\n      set({ loading: true });\r\n\r\n      const nextState = redoStack[0];\r\n\r\n      // :::::::::::::::: update the canvas\r\n      canvas.loadFromJSON(nextState, () => {\r\n        canvas.getObjects().forEach((obj) => {\r\n          if (obj instanceof fabric.Circle) {\r\n            obj.setControlsVisibility({\r\n              mt: false, mb: false, ml: false, mr: false,\r\n            });\r\n          }\r\n        });\r\n        canvas.renderAll();\r\n        const currentState = JSON.stringify(canvas.toJSON(['id', 'borderColor', 'borderDashArray', 'cornerColor', 'cornerSize', 'cornerStrokeColor', 'transparentCorners', 'rx', 'ry']));\r\n        set({\r\n          undoStack: [...undoStack, currentState],\r\n          redoStack: redoStack.slice(1),\r\n        });\r\n      });\r\n      \r\n      // ::::::::::::::::: set loading to false\r\n      set({ loading: false });\r\n      \r\n      // console.log('\\n\\nredo func: ', undoStack, '\\n\\nredo stack: ', redoStack);\r\n    }\r\n  },\r\n}))\r\n","import { useEventGuiStore } from '@/zustand';\r\nimport { fabric } from 'fabric';\r\n\r\nconst useClipboardActions = () => {\r\n  const { canvas, clipboard, setClipboard, lastClickedPoint, setToolAction } = useEventGuiStore()\r\n\r\n  // :::::::::::::::::::::::::: Function: copy objects\r\n  const copySelectedObjects = () => {\r\n    if (!canvas) return\r\n\r\n    const activeObjects = canvas.getActiveObjects()\r\n    if (activeObjects.length === 0) return\r\n\r\n    // ::::::::::::: Set action to copy\r\n    setToolAction('copy');\r\n\r\n    const clonedObjects = activeObjects.map(obj => fabric.util.object.clone(obj))\r\n    setClipboard(clonedObjects)\r\n  }\r\n\r\n  // :::::::::::::::::::::::::: Function: cut objects\r\n  const cutSelectedObjects = () => {\r\n    if (!canvas) return\r\n\r\n    const activeObjects = canvas.getActiveObjects()\r\n    if (activeObjects.length === 0) return\r\n\r\n    // ::::::::::::: Set action to cut\r\n    setToolAction('cut');\r\n\r\n    const clonedObjects = activeObjects.map(obj => fabric.util.object.clone(obj))\r\n    setClipboard(clonedObjects)\r\n\r\n    canvas.remove(...activeObjects)\r\n    canvas.discardActiveObject()\r\n    canvas.renderAll()\r\n  }\r\n\r\n  // :::::::::::::::::::::::::: Function: paste objects\r\n  const pasteObjects = () => {\r\n    if (!canvas || !clipboard || !lastClickedPoint) return\r\n\r\n    const pastedObjects = clipboard.map(obj => fabric.util.object.clone(obj))\r\n    const boundingBox = getBoundingBox(pastedObjects)\r\n\r\n    // ::::::::::::: Set action to paste\r\n    setToolAction('paste');\r\n\r\n    pastedObjects.forEach(obj => {\r\n      const offsetX = lastClickedPoint.x - boundingBox.left\r\n      const offsetY = lastClickedPoint.y - boundingBox.top\r\n      obj.set({\r\n        left: (obj.left || 0) + offsetX,\r\n        top: (obj.top || 0) + offsetY,\r\n      })\r\n      canvas.add(obj)\r\n    })\r\n\r\n    canvas.renderAll()\r\n  }\r\n\r\n  const getBoundingBox = (objects: fabric.Object[]) => {\r\n    let minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity\r\n\r\n    objects.forEach(obj => {\r\n      const objBoundingRect = obj.getBoundingRect()\r\n      minX = Math.min(minX, objBoundingRect.left)\r\n      minY = Math.min(minY, objBoundingRect.top)\r\n      maxX = Math.max(maxX, objBoundingRect.left + objBoundingRect.width)\r\n      maxY = Math.max(maxY, objBoundingRect.top + objBoundingRect.height)\r\n    })\r\n\r\n    return { left: minX, top: minY, width: maxX - minX, height: maxY - minY }\r\n  }\r\n\r\n  return { copySelectedObjects, cutSelectedObjects, pasteObjects }\r\n}\r\n\r\nexport default useClipboardActions","import { useEffect, useCallback } from 'react';\r\nimport { useEventGuiStore } from '@/zustand';\r\n\r\nconst useUndoRedo = () => {\r\n  const { canvas, addToUndoStack, undo, redo, undoStack } = useEventGuiStore();\r\n\r\n  // :::::::::::::::: Function: appends undo state\r\n  const handleObjectModified = useCallback(() => {\r\n    if (canvas) {\r\n      const jsonState = JSON.stringify(canvas.toJSON(['id', 'borderColor', 'borderDashArray', 'cornerColor', 'cornerSize', 'cornerStrokeColor', 'transparentCorners', 'rx', 'ry']));\r\n      addToUndoStack(jsonState);\r\n    }\r\n  }, [canvas, addToUndoStack]);\r\n\r\n  useEffect(() => {\r\n    if (!canvas) return\r\n\r\n    const eventsToListen = [\r\n      'object:modified',\r\n      'object:added',\r\n      'object:removed'\r\n    ];\r\n\r\n    // ::::::::::::::: Loop through events to call function\r\n    eventsToListen.forEach(event => {\r\n      canvas.on(event, handleObjectModified);\r\n    });\r\n\r\n    return () => {\r\n      eventsToListen.forEach(event => {\r\n        canvas.off(event, handleObjectModified);\r\n      });\r\n    }\r\n  }, [canvas, addToUndoStack])\r\n\r\n  return { undo, redo }\r\n}\r\n\r\nexport default useUndoRedo;","import React, { useState } from 'react';\r\nimport { useEventGuiStore } from '@/zustand';\r\nimport useClipboardActions from '@/hooks/useClipboardActions';\r\nimport useUndoRedo from '@/hooks/useUndoRedo';\r\nimport {\r\n  LuFile,\r\n  LuFolderOpen,\r\n  LuSave,\r\n  LuMousePointer,\r\n  LuClipboardCheck,\r\n  LuLayoutDashboard,\r\n  LuPlus,\r\n  LuGrid2X2,\r\n  LuUndo,\r\n  LuRedo,\r\n  LuScissors,\r\n  LuCopy,\r\n  LuTrash2,\r\n  LuZoomIn,\r\n  LuZoomOut,\r\n  LuQrCode,\r\n} from 'react-icons/lu';\r\nimport { RiText, RiShapeLine, RiApps2AddLine } from 'react-icons/ri';\r\n\r\nconst Toolbar: React.FC = () => {\r\n  const {\r\n    zoomLevel,\r\n    setZoomLevel,\r\n    toolMode,\r\n    setToolMode,\r\n    toolAction,\r\n    setToolAction,\r\n  } = useEventGuiStore();\r\n\r\n  const { copySelectedObjects, cutSelectedObjects, pasteObjects } =\r\n    useClipboardActions();\r\n  const { undo, redo } = useUndoRedo();\r\n\r\n  // ::::::::::::::::::: Function: toggle create multiple seats mode\r\n  const toggleMultipleSeatMode = () => {\r\n    setToolMode(toolMode === 'multiple-seat' ? 'select' : 'multiple-seat');\r\n  };\r\n\r\n  // ::::::::::::::::::: Buttons data\r\n  const buttonGroups = [\r\n    { icon: LuFile, tooltip: 'New File', onClick: () => {}, state: false },\r\n    {\r\n      icon: LuFolderOpen,\r\n      tooltip: 'Open File',\r\n      onClick: () => {},\r\n      state: false,\r\n    },\r\n    { icon: LuSave, tooltip: 'Save File', onClick: () => {}, state: false },\r\n    {\r\n      icon: LuMousePointer,\r\n      tooltip: 'Select',\r\n      onClick: () => {\r\n        setToolMode('select');\r\n      },\r\n      state: toolMode === 'select',\r\n    },\r\n    { icon: LuGrid2X2, tooltip: 'Grid View', onClick: () => {}, state: false },\r\n    { icon: LuLayoutDashboard, tooltip: 'Layout View', onClick: () => {}, state: false },\r\n    {\r\n      icon: RiText,\r\n      tooltip: 'Add Text',\r\n      onClick: () => {\r\n        setToolMode('text');\r\n      },\r\n      state: toolMode === 'text',\r\n    },\r\n    {\r\n      icon: RiShapeLine,\r\n      tooltip: 'Add Square',\r\n      onClick: () => {\r\n        setToolMode('shape-square');\r\n      },\r\n      state: toolMode === 'shape-square',\r\n    },\r\n    {\r\n      icon: LuPlus,\r\n      tooltip: 'Add Seat',\r\n      onClick: () => {\r\n        setToolMode('one-seat');\r\n      },\r\n      state: toolMode === 'one-seat',\r\n    },\r\n    {\r\n      icon: RiApps2AddLine,\r\n      tooltip: 'Add Rows',\r\n      onClick: toggleMultipleSeatMode,\r\n      state: toolMode === 'multiple-seat',\r\n    },\r\n    { icon: LuUndo, tooltip: 'Undo', onClick: undo, state: false },\r\n    { icon: LuRedo, tooltip: 'Redo', onClick: redo, state: false },\r\n    {\r\n      icon: LuScissors,\r\n      tooltip: 'Cut',\r\n      onClick: cutSelectedObjects,\r\n      state: toolAction === 'cut',\r\n    },\r\n    {\r\n      icon: LuCopy,\r\n      tooltip: 'Copy',\r\n      onClick: copySelectedObjects,\r\n      state: toolAction === 'copy',\r\n    },\r\n    {\r\n      icon: LuClipboardCheck,\r\n      tooltip: 'Paste',\r\n      onClick: pasteObjects,\r\n      state: toolAction === 'paste',\r\n    },\r\n    {\r\n      icon: LuTrash2,\r\n      tooltip: 'Delete',\r\n      onClick: () => {\r\n        setToolAction('delete');\r\n      },\r\n      state: false, // toolAction === 'delete'\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"sticky top-0 left-0 z-[200] flex items-center gap-1 w-full bg-white px-[1rem] py-[0.5rem] shadow\">\r\n      {buttonGroups.map((item, index) => (\r\n        <React.Fragment key={index}>\r\n          {/* :::::::::::::: add seperator */}\r\n          {[6, 10, 12].includes(index) && (\r\n            <Separator key={`seperator-${index}`} />\r\n          )}\r\n\r\n          {/* :::::::::::::: add space */}\r\n          {3 === index && <div className=\"flex-1\" key={`space-${index}`} />}\r\n\r\n          {/* ::::::::::::::: buttons */}\r\n          <Button\r\n            key={`button-${index}`}\r\n            icon={<item.icon className=\"h-4 w-4\" />}\r\n            tooltip={item.tooltip}\r\n            onClick={item.onClick}\r\n            state={item.state}\r\n          />\r\n        </React.Fragment>\r\n      ))}\r\n\r\n      {/* :::::::::::::: add seperator */}\r\n      <Separator />\r\n\r\n      {/* :::::::::::::: zoom button */}\r\n      <Button\r\n        icon={<LuZoomOut className=\"h-4 w-4\" />}\r\n        tooltip=\"Zoom Out\"\r\n        onClick={() => setZoomLevel(zoomLevel - 10)}\r\n      />\r\n      <div className=\"flex items-center justify-center w-12 h-8 text-sm font-medium\">\r\n        {zoomLevel}%\r\n      </div>\r\n      <Button\r\n        icon={<LuZoomIn className=\"h-4 w-4\" />}\r\n        tooltip=\"Zoom In\"\r\n        onClick={() => setZoomLevel(zoomLevel + 10)}\r\n      />\r\n\r\n      {/* ::::::::::::::: add space */}\r\n      <div className=\"flex-1\" />\r\n\r\n      {/* ::::::::::::::: qr code button */}\r\n      <Button icon={<LuQrCode className=\"h-4 w-4\" />} tooltip=\"QR Code\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n\r\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n  icon: React.ReactNode;\r\n  tooltip: string;\r\n  state?: boolean;\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({ icon, tooltip, ...props }) => {\r\n  const [showTooltip, setShowTooltip] = useState(false);\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      <button\r\n        className={`p-2 rounded-md hover:bg-gray-200/60 ${\r\n          props.state ? 'ring-1 ring-gray-400 shadow-sm shadow-gray-400' : ''\r\n        } active:bg-gray-200 ease-250 `}\r\n        onMouseEnter={() => setShowTooltip(true)}\r\n        onMouseLeave={() => setShowTooltip(false)}\r\n        {...props}\r\n      >\r\n        {icon}\r\n      </button>\r\n\r\n      <div\r\n        className={`absolute left-1/2 transform -translate-x-1/2 ${\r\n          showTooltip\r\n            ? 'top-[calc(100%+0.5rem)] opacity-100'\r\n            : 'top-[100%] opacity-0'\r\n        } px-2 py-1 bg-gray-200 text-gray-900 text-[0.625rem] rounded whitespace-nowrap shadow-md ease-250`}\r\n      >\r\n        {tooltip}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Separator: React.FC = () => (\r\n  <div className=\"w-px h-6 bg-gray-300 mx-[1rem] \" />\r\n);\r\n","import React, { useState, useRef, useEffect } from 'react';\r\n\r\ninterface SelectOption {\r\n  value: string;\r\n  label: string;\r\n}\r\n\r\ninterface SelectProps {\r\n  options: SelectOption[];\r\n  value: string;\r\n  onChange: (value: string) => void;\r\n  placeholder?: string;\r\n}\r\n\r\nconst Select: React.FC<SelectProps> = ({ options, value, onChange, placeholder = 'Select an option' }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const selectRef = useRef<HTMLDivElement>(null);\r\n  const [dropdownPosition, setDropdownPosition] = useState<'top' | 'bottom'>('bottom');\r\n\r\n  const handleToggle = () => setIsOpen(!isOpen);\r\n\r\n  const handleOptionClick = (optionValue: string) => {\r\n    onChange(optionValue);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const handleClickOutside = (event: MouseEvent) => {\r\n    if (selectRef.current && !selectRef.current.contains(event.target as Node)) {\r\n      setIsOpen(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  const selectedOption = options.find(option => option.value === value);\r\n\r\n  // :::::::::::::::::::: Set dropdown position based on bottom space\r\n  const calculateDropdownPosition = () => {\r\n    if (selectRef.current) {\r\n      const { bottom } = selectRef.current.getBoundingClientRect();\r\n      const windowHeight = window.innerHeight;\r\n\r\n      // :::::::::::::::::::::: Check if there is enough space below\r\n      if (windowHeight - bottom < 120) {\r\n        setDropdownPosition('top');\r\n      } else {\r\n        setDropdownPosition('bottom');\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      calculateDropdownPosition();\r\n    }\r\n  }, [isOpen]);\r\n\r\n  return (\r\n    <div ref={selectRef} className=\"relative\">\r\n      <div\r\n        className=\"flex items-center justify-between w-full px-3 py-2 text-sm bg-white border border-gray-300 rounded-md shadow-sm cursor-pointer focus:outline-none focus:ring-2 focus:ring-gray-500 focus:border-gray-500\"\r\n        onClick={handleToggle}\r\n      >\r\n        <span className=\"block truncate\">\r\n          {selectedOption ? selectedOption.label : placeholder}\r\n        </span>\r\n        <span className=\"pointer-events-none\">\r\n          <svg className=\"w-5 h-5 text-gray-400\" viewBox=\"0 0 20 20\" fill=\"none\" stroke=\"currentColor\">\r\n            <path d=\"M7 7l3-3 3 3m0 6l-3 3-3-3\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n          </svg>\r\n        </span>\r\n      </div>\r\n      {/* {isOpen && ( */}\r\n      <div className={`absolute z-10 w-full mt-1 bg-white border-solid border border-gray-300 shadow-lg rounded-[8px] overflow-hidden ${dropdownPosition === 'top' ? 'bottom-full mb-1' : 'top-full mt-1'} ${isOpen? 'opacity-100 user-select-auto visible' : 'select-none user-select-none invisible opacity-0'} ease-250` }>\r\n        <ul className=\"overflow-auto text-base max-h-60 focus:outline-none sm:text-sm\">\r\n          {options.map((option) => (\r\n            <li\r\n              key={option.value}\r\n              className={`cursor-pointer select-none relative py-2 pl-3 pr-9 ${\r\n                value === option.value ? 'bg-gray-100 text-gray-600' : 'text-gray-900 hover:bg-gray-50'\r\n              }`}\r\n              onClick={() => handleOptionClick(option.value)}\r\n            >\r\n              <span className=\"block truncate\">{option.label}</span>\r\n              {value === option.value && (\r\n                <span className=\"absolute inset-y-0 right-0 flex items-center pr-4 text-gray-600\">\r\n                  <svg className=\"w-5 h-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                    <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                </span>\r\n              )}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      {/* )} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import { useState, useEffect } from 'react';\r\nimport { fabric } from 'fabric';\r\nimport { Pattern, Gradient } from 'fabric/fabric-impl';\r\nimport { CustomFabricObject } from '@/types/fabric-types';\r\n\r\nexport interface Properties {\r\n  angle: number;\r\n  radius: number;\r\n  width: number;\r\n  height: number;\r\n  fill: string | Pattern | Gradient | undefined;\r\n  stroke: string | Pattern | Gradient | undefined;\r\n  text: string;\r\n  fontSize: number;\r\n  fontWeight: string;\r\n  fontFamily: string;\r\n  left: number;\r\n  top: number;\r\n}\r\n\r\nexport const useObjectProperties = (\r\n  canvas: fabric.Canvas | null, \r\n  selectedObject: CustomFabricObject | null\r\n) => {\r\n\r\n  // ::::::::::::::::::: Properties state\r\n  const [properties, setProperties] = useState<Properties>({\r\n    angle: 0,\r\n    radius: 10,\r\n    width: 100,\r\n    height: 100,\r\n    fill: 'transparent' as string | undefined,\r\n    stroke: '#000000' as string | undefined,\r\n    text: '',\r\n    fontSize: 20,\r\n    fontWeight: 'normal',\r\n    fontFamily: 'sans-serif',\r\n    left: 0,\r\n    top: 0\r\n  });\r\n\r\n  // ::::::::::::::::::::::: Listen for object selection\r\n  useEffect(() => {\r\n    if (!selectedObject) return;\r\n\r\n    setProperties({\r\n      angle: selectedObject.angle || 0,\r\n      radius: ((selectedObject as any).radius * (selectedObject as any).scaleX) || 10,\r\n      width: selectedObject.width || 100,\r\n      height: selectedObject.height || 100,\r\n      \r\n      // ::::::::::: fill\r\n      fill: selectedObject.fill? String(selectedObject.fill).toUpperCase() === 'BLACK'? '#000000' : String(selectedObject.fill) : 'transparent',\r\n\r\n      // ::::::::::: stroke\r\n      stroke: selectedObject.stroke ? (Number(selectedObject.stroke) === 1? '#000000' : String(selectedObject.stroke)) : '#000000',\r\n\r\n      text: (selectedObject as any).text || '',\r\n      fontSize: (selectedObject as any).fontSize || 20,\r\n      fontWeight: (selectedObject as any).fontWeight || 'normal',\r\n      fontFamily: (selectedObject as any).fontFamily || 'sans-serif',\r\n      left: selectedObject.left || 0,\r\n      top: selectedObject.top || 0\r\n    });\r\n  }, [selectedObject]);\r\n\r\n  return { properties, setProperties };\r\n};","// import { fabric } from 'fabric';\r\n// import { CustomFabricObject } from '@/types/fabric-types';\r\n// import { Properties } from './useObjectProperties';\r\n\r\n// export const useObjectUpdater = (\r\n//   canvas: fabric.Canvas | null, \r\n//   setProperties: React.Dispatch<React.SetStateAction<Properties>>\r\n// ) => {\r\n//   const updateObject = (updates: Partial<Properties>) => {\r\n//     if (!canvas) return;\r\n\r\n//     const activeObjects = canvas.getActiveObjects();\r\n//     if (activeObjects.length === 0) return;\r\n\r\n//     // Only update the properties that have changed\r\n//     const updatedProperties: Partial<CustomFabricObject> = {};\r\n//     for (const [key, value] of Object.entries(updates)) {\r\n//       if (activeObjects[0][key as keyof CustomFabricObject] !== value) {\r\n//         updatedProperties[key as keyof CustomFabricObject] = value;\r\n//       }\r\n//     }\r\n\r\n//     // Ensure stroke is always a string when it's being updated\r\n//     if ('stroke' in updatedProperties && updatedProperties.stroke !== undefined) {\r\n//       updatedProperties.stroke = String(updatedProperties.stroke);\r\n//     }\r\n\r\n//     activeObjects.forEach((obj) => {\r\n//       obj.set(updatedProperties);\r\n      \r\n//       if (obj.type === 'i-text') {\r\n//         obj.set({\r\n//           scaleX: 1,\r\n//           scaleY: 1,\r\n//         });\r\n//       }\r\n//     });\r\n    \r\n//     canvas.renderAll();\r\n\r\n//     // Update properties based on the first selected object\r\n//     setProperties(prev => ({\r\n//       ...prev,\r\n//       ...updatedProperties\r\n//     }));\r\n//   };\r\n\r\n//   return { updateObject };\r\n// };\r\n\r\nimport { fabric } from 'fabric';\r\nimport { CustomFabricObject } from '@/types/fabric-types';\r\nimport { Properties } from './useObjectProperties';\r\n\r\nexport const useObjectUpdater = (\r\n  // selectedObject: CustomFabricObject | null, \r\n  canvas: fabric.Canvas | null, \r\n  setProperties: React.Dispatch<React.SetStateAction<Properties>>\r\n) => {\r\n  const updateObject = (updates: Partial<Properties>) => {\r\n    if (!canvas) return;\r\n\r\n    const activeObjects = canvas.getActiveObjects() as CustomFabricObject[];\r\n    if (activeObjects.length === 0) return;\r\n\r\n\r\n    // Only update the properties that have changed\r\n    activeObjects.forEach((selectedObject) => {\r\n      const updatedProperties: Partial<CustomFabricObject> = {};\r\n        \r\n      for (const [key, value] of Object.entries(updates)) {\r\n\r\n        if (selectedObject[key as keyof CustomFabricObject] !== value) {\r\n          updatedProperties[key as keyof CustomFabricObject] = value;\r\n        }\r\n      }\r\n\r\n      // Ensure stroke is always a string when it's being updated\r\n      if ('stroke' in updatedProperties && updatedProperties.stroke !== undefined) {\r\n        updatedProperties.stroke = String(updatedProperties.stroke);\r\n      }\r\n\r\n      selectedObject.set(updatedProperties);\r\n      \r\n      // :::::::::::: Ensures the text's scales remains 1, only font-size should change\r\n      if (selectedObject.type === 'i-text') {\r\n        selectedObject.set({\r\n          scaleX: 1,\r\n          scaleY: 1,\r\n        });\r\n      }\r\n      \r\n      canvas.renderAll();\r\n\r\n      setProperties(prev => ({\r\n        ...prev,\r\n        ...updatedProperties\r\n      }));\r\n    });\r\n  };\r\n\r\n  return { updateObject };\r\n};","import { Pattern, Gradient } from 'fabric/fabric-impl';\r\n\r\n// :::::::::::::::::::: Converts number to float conditionally\r\nexport const toFloat = (num: number) => {\r\n  return num % 1 !== 0 ? Number(num.toFixed(2)) : num;\r\n};\r\n\r\n// ::::::::::::::::::: Object Properties type\r\nexport interface PropertiesType {\r\n  angle?: number;\r\n  radius?: number;\r\n  width?: number;\r\n  height?: number;\r\n  fill?: string | Pattern | Gradient | undefined;\r\n  stroke?: string | Pattern | Gradient | undefined;\r\n  text?: string;\r\n  fontSize?: number;\r\n  fontWeight?: string;\r\n  fontFamily?: string;\r\n  left?: number;\r\n  top?: number;\r\n}","import { toFloat, PropertiesType } from '@/utils';\r\n// import { toFloat } from '../utils';\r\n\r\ninterface Properties {\r\n  angle: number;\r\n  left: number;\r\n  top: number;\r\n}\r\n\r\ninterface CommonPropertiesProps {\r\n  properties: Properties;\r\n  updateObject: (updates: Partial<Properties>) => void;\r\n}\r\n\r\nconst CommonProperties: React.FC<CommonPropertiesProps> = ({ properties, updateObject }) => (\r\n  <>\r\n    <div>\r\n      <label className=\"block text-sm font-medium text-gray-700\">Angle (&deg;)</label>\r\n      <div className=\"flex items-center mt-1\">\r\n        <button className=\"px-2 py-1 bg-gray-200 rounded-l-md\" onClick={() => updateObject({ angle: toFloat(properties.angle) - 1 })}>-</button>\r\n        <input\r\n          type=\"number\"\r\n          value={toFloat(properties.angle)}\r\n          onChange={(e) => updateObject({ angle: Number(e.target.value) })}\r\n          className=\"w-full px-2 py-1 text-center border-t border-b shadow-sm\"\r\n        />\r\n        <button className=\"px-2 py-1 bg-gray-200 rounded-r-md\" onClick={() => updateObject({ angle: toFloat(properties.angle) + 1 })}>+</button>\r\n      </div>\r\n    </div>\r\n\r\n    <div>\r\n      <label className=\"block text-sm font-medium text-gray-700\">Position X</label>\r\n      <div className=\"flex items-center mt-1\">\r\n        <button className=\"px-2 py-1 bg-gray-200 rounded-l-md\" onClick={() => updateObject({ left: toFloat(properties.left) - 1 })}>-</button>\r\n        <input\r\n          type=\"number\"\r\n          value={toFloat(properties.left)}\r\n          onChange={(e) => updateObject({ left: Number(e.target.value) })}\r\n          className=\"w-full px-2 py-1 text-center border-t border-b shadow-sm\"\r\n        />\r\n        <button className=\"px-2 py-1 bg-gray-200 rounded-r-md\" onClick={() => updateObject({ left: toFloat(properties.left) + 1 })}>+</button>\r\n      </div>\r\n    </div>\r\n\r\n    <div>\r\n      <label className=\"block text-sm font-medium text-gray-700\">Position Y</label>\r\n      <div className=\"flex items-center mt-1\">\r\n        <button className=\"px-2 py-1 bg-gray-200 rounded-l-md\" onClick={() => updateObject({ top: toFloat(properties.top) - 1 })}>-</button>\r\n        <input\r\n          type=\"number\"\r\n          value={toFloat(properties.top)}\r\n          onChange={(e) => updateObject({ top: Number(e.target.value) })}\r\n          className=\"w-full px-2 py-1 text-center border-t border-b shadow-sm\"\r\n        />\r\n        <button className=\"px-2 py-1 bg-gray-200 rounded-r-md\" onClick={() => updateObject({ top: toFloat(properties.top) + 1 })}>+</button>\r\n      </div>\r\n    </div>\r\n  </>\r\n);\r\n\r\nexport default CommonProperties;","import { toFloat, PropertiesType } from '@/utils';\r\n// import { toFloat } from '../utils';\r\n\r\ninterface Properties {\r\n  radius: number;\r\n}\r\n\r\ninterface CirclePropertiesProps {\r\n  properties: Properties;\r\n  updateObject: (updates: Partial<Properties>) => void;\r\n}\r\n\r\nconst CircleProperties: React.FC<CirclePropertiesProps> = ({ properties, updateObject }) => (\r\n  <div>\r\n    <label className=\"block text-sm font-medium text-gray-700\">Radius</label>\r\n    <div className=\"flex items-center mt-1\">\r\n      <button className=\"px-2 py-1 bg-gray-200 rounded-l-md\" onClick={() => updateObject({ radius: toFloat(properties.radius) - 1 })}>-</button>\r\n      <input\r\n        type=\"number\"\r\n        value={toFloat(properties.radius)}\r\n        onChange={(e) => updateObject({ radius: Number(e.target.value) })}\r\n        className=\"w-full px-2 py-1 text-center border-t border-b shadow-sm\"\r\n      />\r\n      <button className=\"px-2 py-1 bg-gray-200 rounded-r-md\" onClick={() => updateObject({ radius: toFloat(properties.radius) + 1 })}>+</button>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default CircleProperties;","import { toFloat, PropertiesType } from '@/utils';\r\n// import { toFloat } from '../utils';\r\n\r\ninterface Properties {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\ninterface RectanglePropertiesProps {\r\n  properties: Properties;\r\n  updateObject: (updates: Partial<Properties>) => void;\r\n}\r\n\r\nconst RectangleProperties: React.FC<RectanglePropertiesProps> = ({ \r\n  properties, updateObject \r\n}) => (\r\n  <>\r\n    <div>\r\n      <label className=\"block text-sm font-medium text-gray-700\">Width</label>\r\n      <div className=\"flex items-center mt-1\">\r\n        <button className=\"px-2 py-1 bg-gray-200 rounded-l-md\" onClick={() => updateObject({ width: toFloat(properties.width) - 1 })}>-</button>\r\n        <input\r\n          type=\"number\"\r\n          value={toFloat(properties.width)}\r\n          onChange={(e) => updateObject({ width: Number(e.target.value) })}\r\n          className=\"w-full px-2 py-1 text-center border-t border-b shadow-sm\"\r\n        />\r\n        <button className=\"px-2 py-1 bg-gray-200 rounded-r-md\" onClick={() => updateObject({ width: toFloat(properties.width) + 1 })}>+</button>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <label className=\"block text-sm font-medium text-gray-700\">Height</label>\r\n      <div className=\"flex items-center  mt-1\">\r\n        <button className=\"px-2 py-1 bg-gray-200 rounded-l-md\" onClick={() => updateObject({ height: toFloat(properties.height) - 1 })}>-</button>\r\n        <input\r\n          type=\"number\"\r\n          value={toFloat(properties.height)}\r\n          onChange={(e) => updateObject({ height: Number(e.target.value) })}\r\n          className=\"w-full px-2 py-1 text-center border-t border-b shadow-sm\"\r\n        />\r\n        <button className=\"px-2 py-1 bg-gray-200 rounded-r-md\" onClick={() => updateObject({ height: toFloat(properties.height) + 1 })}>+</button>\r\n      </div>\r\n    </div>\r\n  </>\r\n);\r\n\r\nexport default RectangleProperties;","import { toFloat, PropertiesType } from '@/utils';\r\n// import { toFloat } from '../utils';\r\n\r\ninterface Properties {\r\n  text: string;\r\n  fontSize: number;\r\n  fontWeight: string;\r\n  fontFamily: string;\r\n}\r\n\r\ninterface TextPropertiesProps {\r\n  properties: Properties;\r\n  updateObject: (updates: Partial<Properties>) => void;\r\n  Select: React.ComponentType<{\r\n    options: Array<{ value: string; label: string }>;\r\n    value: string;\r\n    onChange: (value: string) => void;\r\n  }>;\r\n}\r\n\r\nconst fontWeightOptions = [\r\n  { value: 'normal', label: 'Normal' },\r\n  { value: 'bold', label: 'Bold' },\r\n];\r\n\r\nconst fontFamilyOptions = [\r\n  { value: 'sans-serif', label: 'Sans-serif' },\r\n  { value: 'serif', label: 'Serif' },\r\n  { value: 'monospace', label: 'Monospace' },\r\n  { value: 'poppins', label: 'Poppins' },\r\n];\r\n\r\nconst TextProperties: React.FC<TextPropertiesProps> = ({ properties, updateObject, Select }) => (\r\n  <>\r\n    <div>\r\n      <label className=\"block text-sm font-medium text-gray-700\">Text</label>\r\n      <input\r\n        type=\"text\"\r\n        value={properties.text}\r\n        onChange={(e) => updateObject({ text: e.target.value })}\r\n        className=\"mt-1 px-2 py-1 w-full border rounded-md\"\r\n      />\r\n    </div>\r\n    <div>\r\n      <label className=\"block text-sm font-medium text-gray-700\">Font Size</label>\r\n      <div className=\"flex items-center mt-1\">\r\n        <button className=\"px-2 py-1 bg-gray-200 rounded-l-md\" onClick={() => updateObject({ fontSize: toFloat(properties.fontSize) - 1 })}>-</button>\r\n        <input\r\n          type=\"number\"\r\n          value={toFloat(properties.fontSize)}\r\n          onChange={(e) => updateObject({ fontSize: Number(e.target.value) })}\r\n          className=\"w-full px-2 py-1 text-center border-t border-b shadow-sm\"\r\n        />\r\n        <button className=\"px-2 py-1 bg-gray-200 rounded-r-md\" onClick={() => updateObject({ fontSize: toFloat(properties.fontSize) + 1 })}>+</button>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <label className=\"block text-sm font-medium text-gray-700\">Font Weight</label>\r\n      <Select\r\n        options={fontWeightOptions}\r\n        value={properties.fontWeight}\r\n        onChange={(value) => updateObject({ fontWeight: value })}\r\n      />\r\n    </div>\r\n    <div>\r\n      <label className=\"block text-sm font-medium text-gray-700\">Font Family</label>\r\n      <Select\r\n        options={fontFamilyOptions}\r\n        value={properties.fontFamily}\r\n        onChange={(value) => updateObject({ fontFamily: value })}\r\n      />\r\n    </div>\r\n  </>\r\n);\r\n\r\nexport default TextProperties;","import { Properties } from '../../hooks';\r\n\r\ninterface ColorPropertiesProps {\r\n  properties: Properties;\r\n  updateObject: (updates: Partial<Properties>) => void;\r\n  objectType: string | null;\r\n}\r\n\r\nconst ColorProperties: React.FC<ColorPropertiesProps> = ({ properties, updateObject, objectType }) => (\r\n  <>\r\n    <div>\r\n      <label className=\"block text-sm font-medium text-gray-700\">Fill Color</label>\r\n      <div className=\"flex items-center mt-1\">\r\n        <input\r\n          type=\"color\"\r\n          value={\r\n            properties?.fill === 'transparent' ? '#ffffff' : properties.fill?.toString() || '#ffffff'\r\n          }\r\n          onChange={(e) => {\r\n            updateObject({ fill: e.target.value });\r\n            updateObject({ stroke: properties.stroke });\r\n          }}\r\n          className=\"w-8 h-8 rounded-md border shadow-sm\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={\r\n            properties.fill === 'transparent' ? 'transparent' : (properties.fill?.toString() || '').toUpperCase()\r\n          }\r\n          onChange={(e) => updateObject({ fill: e.target.value })}\r\n          className=\"ml-2 px-2 py-1 w-full border rounded-md shadow-sm\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    {objectType !== 'i-text' && (\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700\">Border Color</label>\r\n        <div className=\"flex items-center mt-1\">\r\n          <input\r\n            type=\"color\"\r\n            value={\r\n              properties?.stroke === 'transparent' ? '#ffffff' : properties.stroke?.toString() || '#000000'\r\n            }\r\n            onChange={(e) => updateObject({ stroke: e.target.value })}\r\n            className=\"w-8 h-8 rounded-md border shadow-sm\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            value={\r\n              properties.stroke === 'transparent' ? 'transparent' : (properties.stroke?.toString() || '').toUpperCase()\r\n            }\r\n            onChange={(e) => updateObject({ stroke: e.target.value })}\r\n            className=\"ml-2 px-2 py-1 w-full border rounded-md shadow-sm\"\r\n          />\r\n        </div>\r\n      </div>\r\n    )}\r\n  </>\r\n);\r\n\r\nexport default ColorProperties;","import { useEffect, useState } from 'react';\r\nimport { LuPlus } from 'react-icons/lu';\r\nimport { useEventGuiStore } from '@/zustand';\r\nimport { CustomFabricObject } from '@/types/fabric-types';\r\nimport { Select } from '@/components/ui';\r\nimport { useObjectProperties, useObjectUpdater } from './hooks';\r\nimport CommonProperties from './components/commonProperties';\r\nimport CircleProperties from './components/circleProperties';\r\nimport RectangleProperties from './components/rectangleProperties';\r\nimport TextProperties from './components/textProperties';\r\nimport ColorProperties from './components/colorProperties';\r\n\r\nexport type Mode =\r\n  | 'select'\r\n  | 'one-seat'\r\n  | 'multiple-seat'\r\n  | 'shape-square'\r\n  | 'text';\r\n\r\nconst Sidebar: React.FC = () => {\r\n  const { canvas } = useEventGuiStore();\r\n  const [selectedObject, setSelectedObject] =\r\n    useState<CustomFabricObject | null>(null);\r\n  const [objectType, setObjectType] = useState<\r\n    'circle' | 'rect' | 'i-text' | null\r\n  >(null);\r\n\r\n  const { properties, setProperties } = useObjectProperties(\r\n    canvas,\r\n    selectedObject\r\n  );\r\n  const { updateObject } = useObjectUpdater(canvas, setProperties);\r\n\r\n  // ::::::::::::::::::::::: Listen for object selection\r\n  useEffect(() => {\r\n    if (!canvas) return;\r\n\r\n    const updateSelectedObject = () => {\r\n      const activeObject = canvas.getActiveObject() as CustomFabricObject;\r\n      setSelectedObject(activeObject || null);\r\n      setObjectType(activeObject?.type as 'circle' | 'rect' | 'i-text' | null);\r\n    };\r\n\r\n    const eventsToListen = [\r\n      'selection:created',\r\n      'selection:updated',\r\n      'object:moving',\r\n      'object:rotating',\r\n      'object:scaling',\r\n      'object:modified',\r\n    ];\r\n\r\n    // ::::::::::::::: Loop through events to call update function on\r\n    eventsToListen.forEach((event) => {\r\n      canvas.on(event, updateSelectedObject);\r\n    });\r\n\r\n    canvas.on('selection:cleared', () => {\r\n      setSelectedObject(null);\r\n      setObjectType(null);\r\n    });\r\n\r\n    return () => {\r\n      eventsToListen.forEach((event) => {\r\n        canvas.off(event, updateSelectedObject);\r\n      });\r\n      canvas.off('selection:cleared');\r\n    };\r\n  }, [canvas]);\r\n\r\n  return (\r\n    <div className=\"w-[20rem] min-h-screen bg-gray-50 p-4 space-y-4\">\r\n      <div className=\"bg-white rounded-md shadow\">\r\n        <div className=\"flex items-center justify-between p-2 bg-gray-200 rounded-t-md\">\r\n          <span className=\"font-semibold\">Zones</span>\r\n          <button className=\"text-gray-600 hover:text-gray-800\">\r\n            <LuPlus size={20} />\r\n          </button>\r\n        </div>\r\n        <div className=\"p-2 flex items-center space-x-2\">\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"ground-floor\"\r\n            className=\"rounded text-blue-600\"\r\n          />\r\n          <label htmlFor=\"ground-floor\">Ground floor</label>\r\n        </div>\r\n      </div>\r\n\r\n      {selectedObject && (\r\n        <div className=\"bg-white rounded-md shadow p-4 space-y-4\">\r\n          <h3 className=\"font-semibold\">Properties</h3>\r\n\r\n          <CommonProperties\r\n            properties={properties}\r\n            updateObject={updateObject}\r\n          />\r\n\r\n          {objectType === 'circle' && (\r\n            <CircleProperties\r\n              properties={properties}\r\n              updateObject={updateObject}\r\n            />\r\n          )}\r\n\r\n          {objectType === 'rect' && (\r\n            <RectangleProperties\r\n              properties={properties}\r\n              updateObject={updateObject}\r\n            />\r\n          )}\r\n\r\n          {objectType === 'i-text' && (\r\n            <TextProperties\r\n              properties={properties}\r\n              updateObject={updateObject}\r\n              Select={Select}\r\n            />\r\n          )}\r\n\r\n          <ColorProperties\r\n            properties={properties}\r\n            updateObject={updateObject}\r\n            objectType={objectType}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import { fabric } from 'fabric';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nclass CustomRect extends fabric.Rect {\r\n  readonly id: string;\r\n\r\n  constructor(options: any) {\r\n    super(options);\r\n    this.id = options.id || uuidv4();\r\n  }\r\n\r\n  toObject(propertiesToInclude: string[] = []) {\r\n    return fabric.util.object.extend(super.toObject(propertiesToInclude), {\r\n      id: this.id,\r\n      borderColor: this.borderColor,\r\n      borderDashArray: this.borderDashArray,\r\n      cornerColor: this.cornerColor,\r\n      cornerSize: this.cornerSize,\r\n      cornerStrokeColor: this.cornerStrokeColor,\r\n      transparentCorners: this.transparentCorners,\r\n    });\r\n  }\r\n}\r\n\r\nclass CustomCircle extends fabric.Circle {\r\n  readonly id: string;\r\n\r\n  constructor(options: any) {\r\n    super(options);\r\n    this.id = options.id || uuidv4();\r\n  }\r\n\r\n  toObject(propertiesToInclude: string[] = []) {\r\n    return fabric.util.object.extend(super.toObject(propertiesToInclude), {\r\n      id: this.id,\r\n      borderColor: this.borderColor,\r\n      borderDashArray: this.borderDashArray,\r\n      cornerColor: this.cornerColor,\r\n      cornerSize: this.cornerSize,\r\n      cornerStrokeColor: this.cornerStrokeColor,\r\n      transparentCorners: this.transparentCorners,\r\n      rx: this.radius,\r\n      ry: this.radius,\r\n    });\r\n  }\r\n}\r\n\r\nclass CustomText extends fabric.IText {\r\n  readonly id: string;\r\n\r\n  constructor(options: any) {\r\n    super(options.text, options);\r\n    this.id = options.id || uuidv4();\r\n  }\r\n\r\n  toObject(propertiesToInclude: string[] = []) {\r\n    return fabric.util.object.extend(super.toObject(propertiesToInclude), {\r\n      id: this.id,\r\n      borderColor: this.borderColor,\r\n      borderDashArray: this.borderDashArray,\r\n      cornerColor: this.cornerColor,\r\n      cornerSize: this.cornerSize,\r\n      cornerStrokeColor: this.cornerStrokeColor,\r\n      transparentCorners: this.transparentCorners,\r\n    });\r\n  }\r\n}\r\n\r\n// ::::::::::::::: Create rectangle object\r\nconst createRect = (left: number, top: number) => {\r\n  const rect = new CustomRect({\r\n    left,\r\n    top,\r\n    fill: 'transparent',\r\n    stroke: 'black',\r\n    strokeWidth: 1,\r\n    width: 100,\r\n    height: 100,\r\n    selectable: true,\r\n    borderColor: 'green',\r\n    borderDashArray: [2, 4],\r\n    padding: 2,\r\n    cornerColor: 'lightblue',\r\n    cornerSize: 5,\r\n    cornerStrokeColor: 'blue',\r\n    transparentCorners: false,\r\n    id: uuidv4()\r\n  });\r\n\r\n  rect.setControlsVisibility({\r\n    mt: false,\r\n    mb: false,\r\n    ml: false,\r\n    mr: false,\r\n  });\r\n  \r\n  return rect;    \r\n};\r\n\r\n// ::::::::::::::: Create seat object\r\nconst createSeat = (left: number, top: number) => {\r\n  const seat = new CustomCircle({\r\n    left,\r\n    top,\r\n    fill: 'transparent',\r\n    stroke: 1,\r\n    radius: 10,\r\n    selectable: true,\r\n    borderColor: 'green',\r\n    borderDashArray: [2, 4],\r\n    padding: 2,\r\n    cornerColor: 'lightblue',\r\n    cornerSize: 5,\r\n    cornerStrokeColor: 'blue',\r\n    transparentCorners: false,\r\n    rx: 0.25,\r\n    ry: 0.25,\r\n    id: uuidv4()\r\n  });\r\n\r\n  seat.setControlsVisibility({\r\n    mt: false,\r\n    mb: false,\r\n    ml: false,\r\n    mr: false,\r\n  });\r\n  \r\n  return seat;    \r\n};\r\n\r\n// ::::::::::::::: Create text object\r\nconst createText = (left: number, top: number, text: string = 'Type here') => {\r\n  const textObject = new CustomText({\r\n    left,\r\n    top,\r\n    text,\r\n    fontSize: 20,\r\n    fill: 'black',\r\n    selectable: true,\r\n    borderColor: 'green',\r\n    borderDashArray: [2, 4],\r\n    padding: 2,\r\n    cornerColor: 'lightblue',\r\n    cornerSize: 5,\r\n    cornerStrokeColor: 'blue',\r\n    transparentCorners: false,\r\n    fontFamily: 'sans-serif',\r\n    id: uuidv4()\r\n  });\r\n\r\n  textObject.setControlsVisibility({\r\n    mt: false,\r\n    mb: false,\r\n    ml: false,\r\n    mr: false,\r\n  });\r\n  \r\n  return textObject;\r\n};\r\n\r\n\r\nexport { CustomRect, CustomCircle, CustomText, createRect, createSeat, createText };","import { useEffect } from 'react';\r\nimport { fabric } from 'fabric';\r\nimport { createSeat } from '../components/createObject';\r\n\r\nconst useCanvasSetup = (canvasRef: React.RefObject<HTMLCanvasElement>, canvasParent: React.RefObject<HTMLDivElement>, setCanvas: (canvas: fabric.Canvas) => void) => {\r\n  useEffect(() => {\r\n    if (!canvasRef.current || !canvasParent.current) return;\r\n\r\n    const newCanvas = new fabric.Canvas(canvasRef.current);\r\n    setCanvas(newCanvas);\r\n    \r\n    const resizeCanvas = () => {\r\n      if (canvasParent.current) {\r\n        const parent = canvasParent.current;\r\n        if (parent) {\r\n          const { width, height } = parent.getBoundingClientRect();\r\n          newCanvas.setDimensions({ width, height }, { cssOnly: false });\r\n        }\r\n      }\r\n    };\r\n\r\n    resizeCanvas();\r\n    window.addEventListener('resize', resizeCanvas);\r\n\r\n    const seat = createSeat(100, 100);\r\n    seat.angle = 45;\r\n    // newCanvas.add(seat);\r\n\r\n    newCanvas.on('object:moving', (event) => {\r\n      const obj = event.target;\r\n      const { width: canvasWidth, height: canvasHeight } = newCanvas;\r\n      \r\n      if (obj) {\r\n        const objWidth = (obj.width ?? 0) * (obj.scaleX ?? 1);\r\n        const objHeight = (obj.height ?? 0) * (obj.scaleY ?? 1);\r\n        \r\n        obj.left = Math.max(0, Math.min((obj.left ?? 0), (canvasWidth ?? 0) - objWidth));\r\n        obj.top = Math.max(0, Math.min((obj.top ?? 0), (canvasHeight ?? 0) - objHeight));\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', resizeCanvas);\r\n      newCanvas.dispose();\r\n    };\r\n  }, [canvasRef, canvasParent, setCanvas]);\r\n};\r\n\r\nexport default useCanvasSetup;","import { useEffect } from 'react';\r\nimport { fabric } from 'fabric';\r\n\r\nconst useSelectionHandler = (canvas: fabric.Canvas | null) => {\r\n  useEffect(() => {\r\n    if (!canvas) return;\r\n\r\n    const handleSelection = () => {\r\n      const activeObject = canvas.getActiveObject();\r\n      \r\n      if (activeObject && activeObject.type === 'activeSelection') {\r\n        activeObject.setControlsVisibility({\r\n          mt: false,\r\n          mb: false,\r\n          ml: false,\r\n          mr: false,\r\n        });\r\n\r\n        activeObject.borderColor = 'green';\r\n        activeObject.borderDashArray = [2, 4];\r\n        activeObject.padding = 4;\r\n        activeObject.cornerColor = 'lightblue';\r\n        activeObject.cornerSize = 7;\r\n        activeObject.cornerStrokeColor = 'blue';\r\n        \r\n        canvas.requestRenderAll();\r\n      }\r\n    };\r\n\r\n    canvas.on('selection:created', handleSelection);\r\n    canvas.on('selection:updated', handleSelection);\r\n\r\n    return () => {\r\n      canvas.off('selection:created', handleSelection);\r\n      canvas.off('selection:updated', handleSelection);\r\n    };\r\n  }, [canvas]);\r\n};\r\n\r\nexport default useSelectionHandler;","import { useEffect, useRef } from 'react';\r\nimport { fabric } from 'fabric';\r\nimport { createSeat } from '../components/createObject';\r\nimport { Mode } from '@/zustand/store/eventGuiStore';\r\n\r\nconst useMultipleSeatCreator = (\r\n  canvas: fabric.Canvas | null,\r\n  toolMode: Mode,\r\n  setToolMode: (mode: Mode) => void\r\n) => {\r\n  const startPointRef = useRef<{ x: number; y: number } | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (!canvas) return;\r\n\r\n    const handleMouseDown = (event: fabric.IEvent) => {\r\n      if (toolMode !== 'multiple-seat') return;\r\n      const pointer = canvas.getPointer(event.e);\r\n      startPointRef.current = { x: pointer.x, y: pointer.y };\r\n    };\r\n\r\n    const handleMouseUp = (event: fabric.IEvent) => {\r\n      if (toolMode !== 'multiple-seat' || !startPointRef.current) return;\r\n\r\n      const endPoint = canvas.getPointer(event.e);\r\n      const startPoint = startPointRef.current;\r\n\r\n      const width = Math.abs(endPoint.x - startPoint.x);\r\n      const height = Math.abs(endPoint.y - startPoint.y);\r\n\r\n      const rows = Math.floor(height / 60);\r\n      const cols = Math.floor(width / 60);\r\n\r\n      for (let i = 0; i < rows; i++) {\r\n        for (let j = 0; j < cols; j++) {\r\n          const left = startPoint.x + j * 60;\r\n          const top = startPoint.y + i * 60;\r\n          const seat = createSeat(left, top);\r\n          canvas.add(seat);\r\n        }\r\n      }\r\n\r\n      canvas.renderAll();\r\n      startPointRef.current = null;\r\n      setToolMode('select');\r\n    };\r\n\r\n    canvas.on('mouse:down', handleMouseDown);\r\n    canvas.on('mouse:up', handleMouseUp);\r\n\r\n    return () => {\r\n      canvas.off('mouse:down', handleMouseDown);\r\n      canvas.off('mouse:up', handleMouseUp);\r\n    };\r\n  }, [canvas, toolMode, setToolMode]);\r\n};\r\n\r\nexport default useMultipleSeatCreator;","import { useEffect } from 'react';\r\nimport { fabric } from 'fabric';\r\n\r\nconst useObjectDeletion = (canvas: fabric.Canvas | null, toolAction: string | null) => {\r\n  useEffect(() => {\r\n    if (!canvas) return;\r\n\r\n    const deleteFunction = () => {\r\n      const activeObject = canvas.getActiveObject();\r\n      if (!activeObject) return;\r\n\r\n      if (activeObject.type === 'activeSelection') {\r\n        const activeSelection = activeObject as fabric.ActiveSelection;\r\n        const objects = [...activeSelection.getObjects()];\r\n        objects.forEach(obj => canvas.remove(obj));\r\n      } else {\r\n        canvas.remove(activeObject);\r\n      }\r\n\r\n      canvas.discardActiveObject();\r\n      canvas.renderAll();\r\n    };\r\n\r\n    const handleKeyDown = (event: KeyboardEvent) => {\r\n      if (event.key === 'Delete' || (event.ctrlKey && event.key.toLowerCase() === 'd')) {\r\n        deleteFunction();\r\n      }\r\n    };\r\n\r\n    if (toolAction === 'delete') {\r\n      deleteFunction();\r\n    }\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [canvas, toolAction]);\r\n};\r\n\r\nexport default useObjectDeletion;","import { useEffect, useRef } from 'react';\r\nimport { fabric } from 'fabric';\r\nimport { createSeat, createRect, createText } from '../components/createObject';\r\nimport { Mode } from '@/zustand/store/eventGuiStore';\r\n\r\nconst useObjectCreator = (\r\n  canvas: fabric.Canvas | null,\r\n  toolMode: Mode,\r\n  setToolMode: (mode: Mode) => void\r\n) => {\r\n  const startPointRef = useRef<{ x: number; y: number } | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (!canvas) return;\r\n\r\n    const handleMouseDown = (event: fabric.IEvent) => {\r\n      const pointer = canvas.getPointer(event.e);\r\n\r\n      if (toolMode === 'one-seat') {\r\n        const seat = createSeat(pointer.x, pointer.y);\r\n        canvas.add(seat);\r\n        canvas.renderAll();\r\n      } else if (toolMode === 'shape-square') {\r\n        const rect = createRect(pointer.x, pointer.y);\r\n        rect.set({ width: 0, height: 0 });\r\n        canvas.add(rect);\r\n        canvas.setActiveObject(rect);\r\n        startPointRef.current = { x: pointer.x, y: pointer.y };\r\n      } else if (toolMode === 'text') {\r\n        const text = createText(pointer.x, pointer.y);\r\n        canvas.add(text);\r\n        canvas.setActiveObject(text);\r\n        text.enterEditing();\r\n        text.selectAll();\r\n      }\r\n    };\r\n\r\n    const handleMouseMove = (event: fabric.IEvent) => {\r\n      if (toolMode === 'shape-square' && startPointRef.current) {\r\n        const pointer = canvas.getPointer(event.e);\r\n        const activeObject = canvas.getActiveObject() as fabric.Rect;\r\n\r\n        if (activeObject && activeObject.type === 'rect') {\r\n          const width = Math.abs(pointer.x - startPointRef.current.x);\r\n          const height = Math.abs(pointer.y - startPointRef.current.y);\r\n          activeObject.set({\r\n            width: width,\r\n            height: height\r\n          });\r\n          canvas.renderAll();\r\n        }\r\n      }\r\n    };\r\n\r\n    const handleMouseUp = () => {\r\n      if (toolMode === 'shape-square') {\r\n        startPointRef.current = null;\r\n      }\r\n      setToolMode('select');\r\n    };\r\n\r\n    canvas.on('mouse:down', handleMouseDown);\r\n    canvas.on('mouse:move', handleMouseMove);\r\n    canvas.on('mouse:up', handleMouseUp);\r\n\r\n    return () => {\r\n      canvas.off('mouse:down', handleMouseDown);\r\n      canvas.off('mouse:move', handleMouseMove);\r\n      canvas.off('mouse:up', handleMouseUp);\r\n    };\r\n  }, [canvas, toolMode, setToolMode]);\r\n};\r\n\r\nexport default useObjectCreator;","import { useEffect } from 'react'\r\nimport { useEventGuiStore } from '@/zustand'\r\nimport useClipboardActions from './useClipboardActions'\r\n\r\nconst useKeyboardShortcuts = () => {\r\n  const { canvas, setLastClickedPoint } = useEventGuiStore()\r\n  const { copySelectedObjects, cutSelectedObjects, pasteObjects } = useClipboardActions()\r\n\r\n  useEffect(() => {\r\n    if (!canvas) return\r\n\r\n    const handleKeyDown = (e: KeyboardEvent) => {\r\n      if (e.ctrlKey) {\r\n        switch (e.key.toLowerCase()) {\r\n          case 'c':\r\n            e.preventDefault()\r\n            copySelectedObjects()\r\n            break\r\n          case 'x':\r\n            e.preventDefault()\r\n            cutSelectedObjects()\r\n            break\r\n          case 'v':\r\n            e.preventDefault()\r\n            pasteObjects()\r\n            break\r\n        }\r\n      }\r\n    }\r\n\r\n    const handleMouseDown = (event: fabric.IEvent) => {\r\n      const pointer = canvas.getPointer(event.e)\r\n      setLastClickedPoint({ x: pointer.x, y: pointer.y })\r\n    }\r\n\r\n    document.addEventListener('keydown', handleKeyDown)\r\n    canvas.on('mouse:down', handleMouseDown)\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleKeyDown)\r\n      canvas.off('mouse:down', handleMouseDown)\r\n    }\r\n  }, [canvas, copySelectedObjects, cutSelectedObjects, pasteObjects, setLastClickedPoint])\r\n}\r\n\r\nexport default useKeyboardShortcuts","import { useRef } from 'react';\r\nimport Toolbar from './toolbar';\r\nimport Sidebar from './sidebar';\r\nimport { useEventGuiStore } from '@/zustand';\r\nimport useCanvasSetup from '@/hooks/useCanvasSetup';\r\nimport useSelectionHandler from '@/hooks/useSelectionHandler';\r\nimport useMultipleSeatCreator from '@/hooks/useMultipleSeatCreator';\r\nimport useObjectDeletion from '@/hooks/useObjectDeletion';\r\nimport useObjectCreator from '@/hooks/useObjectCreator';\r\nimport useKeyboardShortcuts from '@/hooks/useKeyboardShortcuts';\r\nimport useUndoRedo from '@/hooks/useUndoRedo';\r\nimport '@/index.css';\r\n\r\nconst SeatCanvas = ({ className }: { className?: string }) => {\r\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\r\n  const canvasParent = useRef<HTMLDivElement>(null);\r\n  const { canvas, setCanvas, toolMode, setToolMode, toolAction } =\r\n    useEventGuiStore();\r\n\r\n  useCanvasSetup(canvasRef, canvasParent, setCanvas);\r\n  useSelectionHandler(canvas);\r\n  useMultipleSeatCreator(canvas, toolMode, setToolMode);\r\n  useObjectDeletion(canvas, toolAction);\r\n  useObjectCreator(canvas, toolMode, setToolMode);\r\n  useUndoRedo();\r\n\r\n  useKeyboardShortcuts();\r\n\r\n  return (\r\n    <div className={`relative size-full bg-gray-200 ${className}`}>\r\n      <Toolbar />\r\n      <div className=\"flex justify-between w-full\">\r\n        <div\r\n          className=\"w-full max-w-[45rem] mx-auto bg-gray-100\"\r\n          ref={canvasParent}\r\n        >\r\n          <canvas ref={canvasRef} />\r\n        </div>\r\n        <Sidebar />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SeatCanvas;\r\n"]}